{"version":3,"sources":["kernel/Kernel.ts","kernel/data/EmployeeData.ts","kernel/data/SettingsData.ts","kernel/Store.ts","reportWebVitals.ts","slices/data.ts","components/BasePage.tsx","components/cards/EmpCard.tsx","components/lists/EmpMainList.tsx","components/EmpListWidget.tsx","components/forms/EmpFormFields.tsx","components/forms/EmpForm.tsx","selectors/index.ts","components/cards/SkillSmallCard.tsx","components/cards/SkillLevelCard.tsx","components/lists/SkillList.tsx","components/SkillAssignListWidget.tsx","components/commons/Checklist.tsx","components/forms/SkillSimpleSelForm.tsx","components/commons/Dialog.tsx","containers/SkillAssignWidget.tsx","containers/utils.ts","containers/EmpDetailDisp.tsx","containers/EmpFormWrapper.tsx","slices/sync.ts","containers/EmpPage.tsx","components/cards/JobCard.tsx","components/lists/JobMainList.tsx","components/JobListWidget.tsx","kernel/ForecastCalc.ts","components/forms/EmpSelForm.tsx","components/cards/EmpSmallCard.tsx","components/lists/EmpAssignList.tsx","components/EmpAssignListWidget.tsx","containers/JobEmpAssignWidget.tsx","components/forms/JobFormFields.tsx","components/forms/JobForm.tsx","components/forms/SettingsFormFields.tsx","slices/settings.ts","containers/JobDetailDisp.tsx","containers/JobPage.tsx","components/cards/DeptCard.tsx","components/DeptGridWidget.tsx","components/forms/DeptFormFields.tsx","components/forms/DeptForm.tsx","containers/DeptPage.tsx","components/forms/SkillFormFields.tsx","components/forms/SkillForm.tsx","components/cards/SkillCard.tsx","components/SkillGridWidget.tsx","containers/SkillPage.tsx","containers/App.tsx","utils/history.ts","sagas/index.ts","slices/index.ts","index.tsx","kernel/Fetcher.ts","kernel/index.ts","kernel/Department.ts","kernel/Skill.ts","kernel/Employee.ts","kernel/Job.ts"],"names":["Kernel","ds","ss","es","js","refresh","a","saveNew","t","_type","DataType","Employee","Department","Job","Skill","submitNew","success","data","_save","submit","save","console","log","del","remove","this","DepartmentStore","SkillStore","EmployeeStore","JobStore","defaultSettings","total_avail_hour","attendance","cycle_time","efficiency_percentage","forecast","working_days_per_month","store","get","post","put","generator","forEach","add","id","erase","getLst","getNew","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selLst","type","state","depts","skills","emps","jobs","dataSlice","createSlice","name","initialState","loading","calculating","reducers","reload","reloadSuccess","payload","newDept","newEmp","newJob","newSkill","reloadError","error","calculate","calculateSuccess","selEmp","selEmpId","selJob","selJobId","_saveData","Array","p","Object","assign","saveData","_saveNewData","delData","_delData","undefined","saveItemProp","prop","val","actions","useStyles","makeStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBarSpacer","content","position","height","minWidth","createMuiTheme","palette","primary","green","secondary","purple","Page","props","classes","history","useHistory","handleOnClick","React","link","push","children","className","ThemeProvider","Box","CssBaseline","AppBar","Toolbar","Button","onClick","component","Container","maxWidth","root","width","info","flexDirection","profilePic","ctrlPanel","EmpCard","item","onFocus","onDelete","firstName","lastName","sesaId","department","Card","variant","CardActionArea","CardMedia","alt","image","title","CardContent","Typography","gutterBottom","toUpperCase","CardActions","size","color","card","bottomFiller","addButton","bottom","right","addIcon","EmpList","lst","selectEmployee","deleteEmployee","genDeleteHandler","e","map","x","idx","key","list","overflowX","overflowY","empForm","onSelect","addButtonOnClick","EmpMainList","genderLabels","formControl","margin","spacing","reportTo","button","Form","feedback","choices","onChange","setState","fbState","setFbState","changeHandler","target","value","String","checked","files","getDataItem","dataItem","ans","findIndex","getFeedback","Grid","container","xs","TextField","required","label","fullWidth","autoComplete","helperText","InputLabelProps","shrink","startIcon","hidden","FormControl","FormLabel","RadioGroup","aria-label","gender","FormControlLabel","control","Radio","birthDate","hireDate","InputLabel","Select","labelId","defaultValue","MenuItem","deptLst","empLst","onSubmit","onCancel","newData","Fragment","getData","dataState","getSync","syncState","getSettings","settingsState","marginLeft","MyCard","defaultChoice","useState","c","setC","useEffect","entries","level","IconButton","edge","SkillLevelCard","col","collection","reduce","prev","curr","indexOf","selected","SkillSmallCard","List","handleDelete","marginBotton","MyList","delButtonOnClick","SkillList","Set","setSelected","dense","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","newSelected","has","delete","handleSel","inputProps","itemLst","Checklist","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","open","onClose","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Widget","included","allColMap","values","includedColMap","fromEntries","filter","arrangeSkills","useSelector","allCol","includedCol","addLstOpen","setAddLstOpen","ids","SkillSimpleSelForm","finalLst","minHeight","EmpDetailDisp","dispatch","useDispatch","handleSubmit","Paper","elevation","EmpForm","SkillAssignWidget","Wrapper","syncSlice","syncing","submitError","submitSuccess","createNew","modify","empList","empDetail","EmpPage","empFormOpen","setEmpFormOpen","BasePage","JobCard","setOpen","onEdit","pplAmtRequired","empAssigned","assignableEmp","length","Collapse","in","timeout","unmountOnExit","selectJob","deleteJob","JobList","JobMainList","calcHeadcount","settings","j","sectorPercentage","EmpSmallCard","job","available","idlst","EmpSelForm","rowInput","paddingTop","paddingBottom","numValueSetter","num","parseInt","isNaN","onBlur","salaryAmount","fromDate","toDate","themes","SettingsForm","forecastSettings","settingsSlice","submitSettings","jobForm","alignContent","assignments","JobDetailDisp","settingsFormOpen","setSettingsFormOpen","setData","sm","JobForm","Math","ceil","skillsRequired","s","workspace","jobList","jobDetail","jobLst","_","isEmpty","jobFormOpen","setJobFormOpen","datas","buttons","MyGrid","xCpy","DeptCard","DeptFormFields","deptGrid","deptForm","deptFormOpen","setDeptFormOpen","DeptGridWidget","DeptForm","d","brandNew","flexFlow","skillForm","onSubmitNew","sort","y","splice","skillFormOpen","setSkillFormOpen","SkillForm","some","SkillCard","SkillGrid","skillColMap","getSkillCollectionMap","skillLst","handleSubmitNew","SkillGridWidget","App","exact","path","to","JobPage","DeptPage","SkillPage","createBrowserHistory","fetchDatas","calculateDatas","postItemThenSave","putItem","deleteItem","delDataCascadeThenCalculate","saveDataCascadeThenCalculate","rootSaga","k","call","message","select","changes","empJobMap","getAssignableEmps","sy","f","isArray","delDataCascade","mods","dels","cascadeDel","skill","emp","dept","getJobsWithSkill","reverse","finalMods","finalDels","all","takeLatest","rootReducer","combineReducers","dataReducer","syncReducer","settingsReducer","sagaMiddleware","createSagaMiddleware","configureStore","reducer","middleware","getDefaultMiddleware","thunk","devTools","run","ReactDOM","render","document","getElementById","empUrl","deptUrl","skillUrl","jobUrl","Fetcher","getEmps","axios","getDepts","getSkills","getJobs","postEmp","fd","FormData","append","postDept","postSkill","postJob","putEmp","putDept","putSkill","putJob","deleteEmp","deleteDept","deleteSkill","dataToObj","objToData","obj","res","response","status","birth_date","first_name","hire_date","last_name","profile_pic","sesa_id","report_to","jobAssigned","ppl_amt_required","skills_required","salary_amount","emp_assigned","from_date","to_date"],"mappings":"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","file":"static/js/main.b16b51d9.chunk.js","sourcesContent":["import DepartmentStore, { Department } from \"./Department\";\r\nimport SkillStore, { Skill } from \"./Skill\";\r\nimport EmployeeStore, { Employee } from \"./Employee\";\r\nimport JobStore, { Job } from \"./Job\";\r\nimport { Store, Item, DataType } from \"./Store\";\r\n\r\ntype Data = Department | Skill | Employee | Job;\r\n\r\nclass Kernel {\r\n  ds: Store<Department>;\r\n  ss: Store<Skill>;\r\n  es: Store<Employee>;\r\n  js: Store<Job>;\r\n\r\n  constructor() {\r\n    this.ds = new DepartmentStore();\r\n    this.ss = new SkillStore();\r\n    this.es = new EmployeeStore();\r\n    this.js = new JobStore();\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh = async () => {\r\n    await this.ds.refresh();\r\n    await this.ss.refresh();\r\n    await this.es.refresh();\r\n    await this.js.refresh();\r\n  };\r\n\r\n  public saveNew = async (t: Item) => {\r\n    switch (t._type) {\r\n      case DataType.Employee:\r\n        return await this.es.submitNew(t as Employee);\r\n      case DataType.Department:\r\n        return await this.ds.submitNew(t as Department);\r\n      case DataType.Job:\r\n        return await this.js.submitNew(t as Job);\r\n      case DataType.Skill:\r\n        return await this.ss.submitNew(t as Skill);\r\n      default:\r\n        return { success: false, data: {} };\r\n    }\r\n  };\r\n\r\n  public _save = async (t: Item) => {\r\n    switch (t._type) {\r\n      case DataType.Employee:\r\n        return await this.es.submit(t as Employee);\r\n      case DataType.Department:\r\n        return await this.ds.submit(t as Department);\r\n      case DataType.Job:\r\n        return await this.js.submit(t as Job);\r\n      case DataType.Skill:\r\n        return await this.ss.submit(t as Skill);\r\n      default:\r\n        return { success: false, data: {} };\r\n    }\r\n  };\r\n\r\n  public save = async (t: Item) => {\r\n    console.log(t);\r\n    let a = this._save(t);\r\n    console.log(a);\r\n    return a;\r\n  }\r\n\r\n  public del = async (t: Item) => {\r\n    switch (t._type) {\r\n      case DataType.Employee:\r\n        return await this.es.remove(t as Employee);\r\n      case DataType.Department:\r\n        return await this.ds.remove(t as Department);\r\n      case DataType.Job:\r\n        return await this.js.remove(t as Job);\r\n      case DataType.Skill:\r\n        return await this.ss.remove(t as Skill);\r\n      default:\r\n        return { success: false, data: {} };\r\n    }\r\n  };\r\n}\r\n\r\nexport type { Department, Skill, Employee, Job, Store, Item, Data };\r\nexport { Kernel };\r\n","import { Data } from \"./Data\";\r\nimport { DepartmentId, EmployeeId, SkillId } from \"./Types\";\r\n\r\ninterface EmployeeData extends Data {\r\n  available: boolean;\r\n  birth_date: string;\r\n  first_name: string;\r\n  gender: string;\r\n  hire_date: string;\r\n  last_name: string;\r\n  department?: DepartmentId;\r\n  id?: EmployeeId;\r\n  profile_pic?: string | File;\r\n  sesa_id: string;\r\n  skills: SkillId[];\r\n  report_to?: EmployeeId;\r\n}\r\n\r\nconst empty: EmployeeData = {\r\n  available: true,\r\n  birth_date: \"2020-01-01\",\r\n  first_name: \"\",\r\n  gender: \"\",\r\n  hire_date: \"\",\r\n  last_name: \"\",\r\n  profile_pic: \"\",\r\n  sesa_id: \"\",\r\n  department: 0,\r\n  skills: []\r\n};\r\n\r\nconst dummy: EmployeeData = {\r\n  available: true,\r\n  birth_date: \"2021-01-13\",\r\n  first_name: \"John\",\r\n  gender: \"M\",\r\n  hire_date: \"2021-01-14\",\r\n  last_name: \"Doe\",\r\n  id: 1,\r\n  profile_pic: \"http://localhost:8000/files/profile_pic/Screenshot_1.png\",\r\n  sesa_id: \"1233\",\r\n  department: 0,\r\n  skills: []\r\n};\r\n\r\nexport type { EmployeeData };\r\nexport { dummy as dummyEmpData, empty as emptyEmpData };\r\n","interface SettingsData {\r\n  total_avail_hour: number;\r\n  attendance: number;\r\n  cycle_time: number;\r\n  efficiency_percentage: number;\r\n  forecast: number;\r\n  working_days_per_month: number;\r\n}\r\n\r\nconst defaultSettings: SettingsData = {\r\n  total_avail_hour: 1,\r\n  attendance: 1,\r\n  cycle_time: 1,\r\n  efficiency_percentage: 60,\r\n  forecast: 1000,\r\n  working_days_per_month: 22\r\n};\r\n\r\nexport type { SettingsData };\r\nexport { defaultSettings };\r\n","import { Data } from \"./data/Data\";\r\n\r\nenum DataType {\r\n  Job,\r\n  Employee,\r\n  Skill,\r\n  Department,\r\n}\r\n\r\ninterface Item extends Data {\r\n  id: number;\r\n  _type: DataType;\r\n}\r\n\r\ninterface Result {\r\n  success: boolean;\r\n  data: any;\r\n}\r\n\r\nconst emptySave = async () => ({ success: false, data: {} });\r\nconst emptyDelete = async () => ({ success: false, data: {} });\r\n\r\ninterface Store<T extends Item> {\r\n  refresh: () => Promise<void>;\r\n  getLst: () => { [id: number]: T };\r\n  getNew: () => T;\r\n  submit: (t: T) => Promise<Result>;\r\n  submitNew: (t: T) => Promise<Result>;\r\n  remove: (t: T) => Promise<void>;\r\n}\r\n\r\nfunction store<T extends Item>(\r\n  get: () => Promise<T[]>,\r\n  post: (t: T) => Promise<Result>,\r\n  put: (t: T) => Promise<Result>,\r\n  del: (t: T) => Promise<void>,\r\n  generator: () => T\r\n) {\r\n  return class implements Store<T> {\r\n    private store: { [id: number]: T } = {};\r\n\r\n    static generator = generator;\r\n\r\n    refresh = async () => {\r\n      let lst = await get();\r\n      lst.forEach(this.add);\r\n    };\r\n\r\n    private add = (t: T) => {\r\n      this.store[t.id] = t;\r\n    };\r\n\r\n    private erase = (t: T) => {\r\n      delete this.store[t.id];\r\n    };\r\n\r\n    getLst = (): { [id: number]: T } => {\r\n      return { ...this.store };\r\n    };\r\n\r\n    getNew = (): T => {\r\n      return generator();\r\n    };\r\n\r\n    submitNew = async (t: T) => {\r\n      try {\r\n        this.add(t);\r\n        return await post(t);\r\n      } catch (error) {\r\n        return { success: false, data: error };\r\n      }\r\n    }\r\n\r\n    submit = async (t: T) => {\r\n      try {\r\n        return await put(t);\r\n      } catch (error) {\r\n        return { success: false, data: error };\r\n      }\r\n    };\r\n\r\n    remove = async (t: T) => {\r\n      this.erase(t);\r\n      await del(t);\r\n    };\r\n  };\r\n}\r\n\r\nexport type { Item, Store, Result };\r\nexport { DataType, emptySave, emptyDelete };\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { DataType, Data } from \"src/kernel\";\r\nimport { DataState } from \"src/types\";\r\n\r\ntype DetailChange = { type: DataType; id: number; prop: string; val: any };\r\n\r\nfunction selLst(type: DataType, state: DataState) {\r\n  switch (type) {\r\n    case DataType.Department:\r\n      return state.depts;\r\n    case DataType.Skill:\r\n      return state.skills;\r\n    case DataType.Employee:\r\n      return state.emps;\r\n    case DataType.Job:\r\n      return state.jobs;\r\n    default:\r\n      return state.depts;\r\n  }\r\n}\r\n\r\nexport const initialState: DataState = {\r\n  depts: [],\r\n  skills: [],\r\n  emps: [],\r\n  jobs: [],\r\n  loading: true,\r\n  calculating: false,\r\n};\r\n\r\nconst dataSlice = createSlice({\r\n  name: \"data\",\r\n  initialState,\r\n  reducers: {\r\n    reload: (state) => {\r\n      state.loading = true;\r\n    },\r\n    reloadSuccess: (state, { payload }: PayloadAction<any>) => {\r\n      state.depts = payload.depts;\r\n      state.skills = payload.skills;\r\n      state.emps = payload.emps;\r\n      state.jobs = payload.jobs;\r\n      state.newDept = payload.newDept;\r\n      state.newEmp = payload.newEmp;\r\n      state.newJob = payload.newJob;\r\n      state.newSkill = payload.newSkill;\r\n      state.loading = false;\r\n    },\r\n    reloadError: (state, { payload }: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n    calculate: (state) => {\r\n      state.calculating = true;\r\n    },\r\n    calculateSuccess: (state) => {\r\n      state.calculating = false;\r\n    },\r\n    selEmp: (state, { payload }: PayloadAction<number | undefined>) => {\r\n      state.selEmpId = payload;\r\n    },\r\n    selJob: (state, { payload }: PayloadAction<number | undefined>) => {\r\n      state.selJobId = payload;\r\n    },\r\n    _saveData: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      if (!(payload instanceof Array)) {\r\n        payload = [payload];\r\n      }\r\n      for (let p of payload) {\r\n        const { _type: type, id } = p;\r\n        Object.assign(selLst(type, state)[id], p);\r\n      }\r\n    },\r\n    saveData: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      state.loading = true;\r\n    },\r\n    _saveNewData: (state, { payload }: PayloadAction<Data>) => {\r\n      const { _type: type, id } = payload;\r\n      selLst(type, state)[id] = payload;\r\n    },\r\n    delData: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      state.loading = true;\r\n    },\r\n    _delData: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      if (!(payload instanceof Array)) {\r\n        payload = [payload];\r\n      }\r\n      for (let p of payload) {\r\n        const { _type: type, id } = p;\r\n        delete selLst(type, state)[id];\r\n        if (type === DataType.Job && id === state.selJobId)\r\n          state.selJobId = undefined;\r\n        if (type === DataType.Employee && id === state.selEmpId)\r\n          state.selEmpId = undefined;\r\n      }\r\n    },\r\n    saveItemProp: (\r\n      state,\r\n      { payload }: PayloadAction<DetailChange | DetailChange[]>\r\n    ) => {\r\n      if (!(payload instanceof Array)) {\r\n        payload = [payload];\r\n      }\r\n      for (let p of payload) {\r\n        const { type, id, prop, val } = p;\r\n        selLst(type, state)[id][prop] = val;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  reload,\r\n  reloadSuccess,\r\n  reloadError,\r\n  calculate,\r\n  calculateSuccess,\r\n  selEmp,\r\n  selJob,\r\n  saveData,\r\n  _saveData,\r\n  _saveNewData,\r\n  delData,\r\n  _delData,\r\n  saveItemProp,\r\n} = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n","import * as React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    //backgroundColor: \"blue\",\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    position: \"relative\",\r\n    height: \"89vh\",\r\n    minWidth: 1200,\r\n  },\r\n}));\r\n\r\ninterface PageProps {\r\n  className?: any;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary: purple,\r\n  },\r\n});\r\n\r\nconst Page: React.FC<PageProps> = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleOnClick = React.useCallback((link: string) => history.push(link), [history]);\r\n\r\n  const { className, children } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box>\r\n        <CssBaseline />\r\n        <AppBar>\r\n          <Toolbar className={classes.toolbar}>\r\n            <Button onClick={() => handleOnClick('/depts')}>\r\n              Departments\r\n            </Button>\r\n            <Button onClick={() => handleOnClick('/skills')}>\r\n              Skills\r\n            </Button>\r\n            <Button onClick={() => handleOnClick('/emps')}>\r\n              Employee\r\n            </Button>\r\n            <Button onClick={() => handleOnClick('/jobs')}>\r\n              Job Matrix\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box component=\"main\">\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth={\"lg\"}>\r\n            <div className={classes.content}>{children}</div>\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Employee } from \"../../kernel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  profilePic: {\r\n    width: \"120px\",\r\n  },\r\n  ctrlPanel: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n});\r\n\r\ninterface EmpCardProps {\r\n  className?: any;\r\n  item: Employee;\r\n  onFocus?: () => void;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst EmpCard: React.FC<EmpCardProps> = (props) => {\r\n  const { className, item, onFocus = () => {}, onDelete } = props;\r\n  const classes = useStyles();\r\n  const { firstName, lastName, sesaId, department } = item;\r\n  return (\r\n    <div className={className}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardActionArea className={classes.info} onClick={onFocus}>\r\n          <CardMedia\r\n            className={classes.profilePic}\r\n            component=\"img\"\r\n            alt=\"Contemplative Reptile\"\r\n            image=\"https://via.placeholder.com/150\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              {firstName}, {lastName.toUpperCase()}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\" component=\"h4\">\r\n              SESA ID: {sesaId}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.ctrlPanel}>\r\n          {onDelete ? (\r\n            <Button size=\"small\" color=\"primary\" onClick={onDelete}>\r\n              Delete\r\n            </Button>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpCard;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Employee } from \"../../kernel\";\r\nimport EmpCard from \"../cards/EmpCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    padding: \"5px\",\r\n  },\r\n  bottomFiller: {\r\n    height: 100,\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\ninterface IEmployeeListProps {\r\n  lst: Employee[];\r\n  selectEmployee: (e: Employee) => void;\r\n  deleteEmployee: (e: Employee) => void;\r\n}\r\n\r\nconst EmpList: React.FunctionComponent<IEmployeeListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, selectEmployee, deleteEmployee } = props;\r\n\r\n  const genFocusHandler = (e: Employee) => () => selectEmployee(e);\r\n  const genDeleteHandler = (e: Employee) => () => deleteEmployee(e);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {lst.map((x, idx) => (\r\n        <EmpCard\r\n          {...{\r\n            key: idx,\r\n            item: x,\r\n            className: classes.card,\r\n            onFocus: genFocusHandler(x),\r\n            onDelete: genDeleteHandler(x),\r\n          }}\r\n        />\r\n      ))}\r\n      <div className={classes.bottomFiller} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmpList;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nimport EmpMainList from \"./lists/EmpMainList\";\r\nimport { Employee } from \"src/kernel\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"inherit\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  bottomFiller: {\r\n    height: 100,\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  empForm: {\r\n    width: \"700px\"\r\n  }\r\n}));\r\n\r\ninterface IEmployeeListProps {\r\n  lst: Employee[];\r\n  onSelect: (e: Employee) => void;\r\n  onDelete: (e: Employee) => void;\r\n  addButtonOnClick: () => void;\r\n}\r\n\r\nconst EmpList: React.FunctionComponent<IEmployeeListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    lst,\r\n    onSelect: selectEmployee,\r\n    onDelete: deleteEmployee,\r\n    addButtonOnClick\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.list}>\r\n        <EmpMainList\r\n          lst={lst}\r\n          selectEmployee={selectEmployee}\r\n          deleteEmployee={deleteEmployee}\r\n        />\r\n      </div>\r\n      <Button className={classes.addButton} onClick={addButtonOnClick}>\r\n        <AddCircleIcon className={classes.addIcon} />\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmpList;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport { FormChoice } from \"./types\";\r\nimport { Employee } from \"src/kernel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  genderLabels: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  department: {\r\n    minWidth: \"50%\",\r\n  },\r\n  reportTo: {\r\n    minWidth: \"50%\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype FormData = Employee;\r\ntype FormFeedback = any;\r\ninterface FormChoices {\r\n  gender: FormChoice[];\r\n  department: FormChoice[];\r\n  reportTo: FormChoice[];\r\n  [prop: string]: FormChoice[];\r\n}\r\n\r\ninterface FormProps {\r\n  data: FormData; //watch\r\n  feedback?: FormFeedback;\r\n  choices: FormChoices;\r\n  onChange?: (data: FormData) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { data, feedback, choices, onChange } = props;\r\n  const [state, setState] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setState(data);\r\n  }, [data]);\r\n  const [fbState, setFbState] = React.useState(feedback);\r\n  React.useEffect(() => {\r\n    setFbState(feedback);\r\n  }, [feedback]);\r\n\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = String(e.target.checked);\r\n    }\r\n\r\n    if (e.target.type === \"file\") {\r\n      value = e.target.files[0];\r\n    }\r\n\r\n    if (name === \"department\" || name === \"reportTo\") {\r\n      value = choices[name][value].value;\r\n    }\r\n\r\n    setFbState({ ...fbState, [name]: undefined });\r\n    if (onChange) {\r\n      onChange({ ...state, [name]: value });\r\n    } else {\r\n      data[name] = value;\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const getValIndex = (prop: string, val: any) => {\r\n    return choices[prop].findIndex((x) => x.value === val);\r\n  };\r\n\r\n  const getDataItem = (name: string) => {\r\n    let dataItem;\r\n    if (name === \"department\") {\r\n      dataItem = state.department;\r\n    } else if (name === \"reportTo\") {\r\n      dataItem = state.reportTo;\r\n    }\r\n    let ans = getValIndex(name, dataItem);\r\n    if (ans < 0) return \"\";\r\n    else return ans;\r\n  };\r\n\r\n  const getFeedback = (name: string) => {\r\n    return fbState ? (fbState[name] ? fbState[name][0] : \"\") : \"\";\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            error={getFeedback(\"sesaId\") !== \"\"}\r\n            name=\"sesaId\"\r\n            label=\"SESA ID\"\r\n            fullWidth\r\n            autoComplete=\"id\"\r\n            value={state.sesaId}\r\n            helperText={getFeedback(\"sesaId\")}\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: !!state.sesaId,\r\n            }}\r\n            onChange={changeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"caption\" component=\"h3\">\r\n            Upload Profile Picture\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            className={classes.button}\r\n            startIcon={<CloudUploadIcon />}\r\n            component=\"label\"\r\n          >\r\n            <input type=\"file\" name=\"profilePic\" onChange={changeHandler} hidden/>\r\n            Upload\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            required\r\n            error={getFeedback(\"firstName\") !== \"\"}\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\"\r\n            value={state.firstName}\r\n            helperText={getFeedback(\"firstName\")}\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: state.firstName !== \"\",\r\n            }}\r\n            onChange={changeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            required\r\n            error={getFeedback(\"lastName\") !== \"\"}\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            value={state.lastName}\r\n            helperText={getFeedback(\"lastName\")}\r\n            variant=\"standard\"\r\n            InputLabelProps={{\r\n              shrink: state.lastName !== \"\",\r\n            }}\r\n            onChange={changeHandler}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"gender\"\r\n              value={state.gender}\r\n              onChange={changeHandler}\r\n              className={classes.genderLabels}\r\n            >\r\n              {choices[\"gender\"].map((x, idx) => (\r\n                <FormControlLabel\r\n                  key={idx}\r\n                  value={x.value}\r\n                  control={<Radio />}\r\n                  label={x.name}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label=\"Birthday\"\r\n            error={getFeedback(\"birthDate\") !== \"\"}\r\n            helperText={getFeedback(\"birthDate\")}\r\n            type=\"date\"\r\n            name=\"birthDate\"\r\n            value={state.birthDate}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={changeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            label=\"Hire date\"\r\n            error={getFeedback(\"hireDate\") !== \"\"}\r\n            helperText={getFeedback(\"hireDate\")}\r\n            type=\"date\"\r\n            name=\"hireDate\"\r\n            value={state.hireDate}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={changeHandler}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Department</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              name=\"department\"\r\n              className={classes.department}\r\n              error={getFeedback(\"department\") !== \"\"}\r\n              defaultValue={1}\r\n              value={getDataItem(\"department\")}\r\n              onChange={changeHandler}\r\n            >\r\n              {choices[\"department\"].map((x, idx) => (\r\n                <MenuItem key={idx} value={idx}>\r\n                  {x.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Report to</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              name=\"reportTo\"\r\n              className={classes.reportTo}\r\n              error={getFeedback(\"reportTo\") !== \"\"}\r\n              defaultValue={1}\r\n              value={getDataItem(\"reportTo\")}\r\n              onChange={changeHandler}\r\n            >\r\n              {choices[\"reportTo\"].map((x, idx) => (\r\n                <MenuItem key={idx} value={idx}>\r\n                  {x.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport type { FormData, FormFeedback, FormChoices };\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport FormFields, { FormChoices, FormFeedback } from \"./EmpFormFields\";\r\nimport { Department, Employee } from \"../../kernel\";\r\n\r\ninterface FormProps {\r\n  deptLst: Department[];\r\n  empLst: Employee[];\r\n  data: Employee;\r\n  feedback?: any;\r\n  onSubmit: (data: Employee) => void;\r\n  onChange?: (data: Employee) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { deptLst, empLst, data, feedback, onSubmit, onCancel, onChange } = props;\r\n  const choices: FormChoices = {\r\n    gender: [\r\n      { name: \"Male\", value: \"M\" },\r\n      { name: \"Female\", value: \"F\" },\r\n    ],\r\n    department: deptLst.map((x) => ({ name: x.name, value: x.id })),\r\n    reportTo: empLst.map((x) => ({ name: x.firstName, value: x.id })),\r\n  };\r\n\r\n  const newData = {...data};\r\n  const handleSubmit = () => {\r\n    onSubmit(newData);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <FormFields choices={choices} data={newData} feedback={feedback} onChange={onChange} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {onCancel ? <Button onClick={onCancel}>Cancel</Button> : null}\r\n            {!onChange ? <Button onClick={handleSubmit}>Submit</Button> : null}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport type { FormFeedback as EmpFormFeedback };\r\nexport default Form;\r\n","import { RootState } from \"src/types\";\r\n\r\nexport const getData = (state: RootState) => state.dataState;\r\nexport const getSync = (state: RootState) => state.syncState;\r\nexport const getSettings = (state: RootState) => state.settingsState;\r\n\r\nexport const getSelectedEmp = (state: RootState) => {\r\n  return state.dataState.selEmpId ? state.dataState.emps[state.dataState.selEmpId] : undefined;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport { Skill } from \"src/kernel\";\r\nimport { FormChoices } from \"./types\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n  },\r\n  content: {\r\n    width: \"80%\",\r\n  },\r\n  ctrlPanel: {\r\n    display: \"flex\",\r\n    marginLeft: \"auto\", // make item on right side\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n}));\r\n\r\ninterface CardProps {\r\n  item: Skill;\r\n  onDelete: () => void;\r\n  defaultChoice?: number;\r\n  choices?: FormChoices;\r\n  onChange?: (val: number) => void;\r\n}\r\n\r\nconst MyCard: React.FC<CardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { item, onDelete, defaultChoice, choices, onChange } = props;\r\n\r\n  const [c, setC] = React.useState(defaultChoice ?? item.id);\r\n  React.useEffect(() => {\r\n    setC(defaultChoice ?? item.id);\r\n  }, [defaultChoice]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<any>) => {\r\n    const { name, value: val } = e.target;\r\n    onChange ? onChange(val) : setC(val);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n        {`${item.name}:   `}\r\n        {choices ? (\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={c}\r\n            onChange={handleChange}\r\n          >\r\n            {Object.entries(choices).map((x, idx) => (\r\n              <MenuItem value={x[1]} key={idx}>\r\n                {x[0]}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        ) : (\r\n          item.level\r\n        )}\r\n      </CardContent>\r\n      <CardActions className={classes.ctrlPanel}>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n          onClick={onDelete}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React from \"react\";\r\n\r\nimport { SkillCollection } from \"src/components/types\";\r\nimport SkillSmallCard from \"./SkillSmallCard\";\r\n\r\ninterface SkillLevelCardProps {\r\n  col: SkillCollection; // modify\r\n  onDelete: () => void;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst SkillLevelCard: React.FC<SkillLevelCardProps> = (props) => {\r\n  const { col, onDelete, onChange } = props;\r\n\r\n  const choices = col.collection.reduce((prev, curr) => {\r\n    prev[curr.level] = col.collection.indexOf(curr);\r\n    return prev;\r\n  }, {} as { [level: number]: number });\r\n  const defaultChoice = col.selected ? col.collection.indexOf(col.selected) : 0;\r\n\r\n  const handleChange = (val: number) => {\r\n    col.selected = col.collection[val];\r\n    onChange && onChange();\r\n  };\r\n\r\n  return (\r\n    <SkillSmallCard\r\n      item={col.selected ?? col.collection[0]}\r\n      onDelete={onDelete}\r\n      choices={choices}\r\n      defaultChoice={defaultChoice}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SkillLevelCard;\r\n","import React from \"react\";\r\nimport { SkillCollection } from \"src/components/types\";\r\nimport SkillLevelCard from \"../cards/SkillLevelCard\";\r\n\r\ninterface ListProps {\r\n  lst: SkillCollection[]; // modify\r\n  onChange?: () => void;\r\n}\r\n\r\nconst List: React.FC<ListProps> = (props) => {\r\n  const { lst, onChange = () => {} } = props;\r\n\r\n  const handleDelete = (x: SkillCollection) => {\r\n    x.selected = undefined;\r\n    onChange();\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {lst.map((x, idx) => (\r\n        <SkillLevelCard col={x} key={idx} onChange={() => onChange()} onDelete={() => handleDelete(x)}/>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SkillCollection } from \"./types\";\r\nimport SkillList from \"./lists/SkillList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"inherit\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  list: {\r\n    height: \"90%\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  ctrlPanel: {\r\n    height: \"10%\",\r\n    marginBotton: \"auto\",\r\n  },\r\n}));\r\n\r\ninterface ListProps {\r\n  lst: SkillCollection[];\r\n  onChange: () => void;\r\n  addButtonOnClick?: () => void;\r\n  delButtonOnClick?: () => void;\r\n}\r\n\r\nconst MyList: React.FunctionComponent<ListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onChange, addButtonOnClick, delButtonOnClick } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.list}>\r\n        <SkillList lst={lst} onChange={onChange} />\r\n      </div>\r\n      <div className={classes.ctrlPanel}>\r\n        {addButtonOnClick ? (\r\n          <Button onClick={addButtonOnClick}>Add</Button>\r\n        ) : null}\r\n        {delButtonOnClick ? (\r\n          <Button onClick={delButtonOnClick}>Delete</Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyList;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"inherit\",\r\n  },\r\n}));\r\n\r\ninterface Item<T> {\r\n  name: string;\r\n  value: T;\r\n}\r\n\r\ninterface FormProps<T> {\r\n  lst: Item<T>[];\r\n  onSubmit: (lst: T[]) => void;\r\n}\r\n\r\nfunction Form<T>(props: FormProps<T>) {\r\n  const classes = useStyles();\r\n  const { lst, onSubmit } = props;\r\n\r\n  const [selected, setSelected] = React.useState<Set<Item<T>>>(new Set());\r\n  const handleSel = (e: Item<T>) => {\r\n    let newSelected = new Set(selected);\r\n    if (selected.has(e)) {\r\n      newSelected.delete(e);\r\n    } else {\r\n      newSelected.add(e);\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit([...selected].map(x => x.value));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <List dense className={classes.root}>\r\n            {lst.map((x, idx) => {\r\n              const labelId = `checkbox-list-secondary-label-${idx}`;\r\n              return (\r\n                <ListItem key={idx} button>\r\n                  <ListItemText id={labelId} primary={x.name} />\r\n                  <ListItemSecondaryAction>\r\n                    <Checkbox\r\n                      edge=\"end\"\r\n                      onChange={() => handleSel(x)}\r\n                      checked={selected.has(x)}\r\n                      inputProps={{ \"aria-labelledby\": labelId }}\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n        <Button onClick={handleSubmit}>Submit</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport type { Item };\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport Checklist, { Item } from \"../commons/Checklist\";\r\nimport { SkillCollection } from \"../types\";\r\n\r\ninterface FormProps {\r\n  lst: SkillCollection[];\r\n  onSubmit: (lst: SkillCollection[]) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { lst, onSubmit } = props;\r\n\r\n  const itemLst: Item<SkillCollection>[] = lst.map(x => ({ name: x.name, value: x}));\r\n  return <Checklist lst={itemLst} onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\"\r\n  },\r\n  content: {\r\n    width: \"fit-content\"\r\n  }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface AlertDialogSlideProps {\r\n  title?: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AlertDialogSlide: React.FC<AlertDialogSlideProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { title, children, open, onClose } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={onClose}\r\n      maxWidth=\"xl\"\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      {title ? <DialogTitle>{title}</DialogTitle> : null}\r\n      <DialogContent className={classes.content}>{children}</DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport { AlertDialogSlide as MyDialog };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { SkillCollection } from \"src/components/types\";\r\nimport SkillListWidget from \"src/components/SkillAssignListWidget\";\r\nimport SkillSimpleSelForm from \"src/components/forms/SkillSimpleSelForm\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport { getData } from \"src/selectors\";\r\n\r\nimport { arrangeSkills } from \"./utils\";\r\n\r\ninterface Props {\r\n  included: number[];\r\n  onSubmit: (lst: number[]) => void;\r\n}\r\n\r\nconst Widget: React.FC<Props> = (props) => {\r\n  const { included, onSubmit } = props;\r\n\r\n  const { skills } = useSelector(getData);\r\n\r\n  const [allColMap, includedColMap] = arrangeSkills(skills, included);\r\n  const allCol = Object.values(allColMap);\r\n  const includedCol = Object.values(includedColMap);\r\n  const [addLstOpen, setAddLstOpen] = React.useState(false);\r\n\r\n  const handleSubmitIncludedCol = () => {\r\n    const ids: number[] = includedCol\r\n      .map((x) => (x.selected ? x.selected.id : -1))\r\n      .filter((x) => x !== -1);\r\n    onSubmit(ids);\r\n  };\r\n\r\n  const handleAddSkill = (lst: SkillCollection[]) => {\r\n    const finalLst = [...included, ...lst.map((x) => x.collection[0].id ?? 0)];\r\n    onSubmit(finalLst);\r\n    setAddLstOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SkillListWidget\r\n        lst={includedCol}\r\n        onChange={handleSubmitIncludedCol}\r\n        addButtonOnClick={() => setAddLstOpen(true)}\r\n      />\r\n      <MyDialog\r\n        title=\"Assign Skill\"\r\n        open={addLstOpen}\r\n        onClose={() => setAddLstOpen(false)}\r\n      >\r\n        <SkillSimpleSelForm\r\n          lst={allCol.filter((x) => !includedColMap[x.name])}\r\n          onSubmit={handleAddSkill}\r\n        />\r\n      </MyDialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import { SkillCollection } from \"src/components/types\";\r\nimport { Skill } from \"src/kernel\";\r\n\r\nexport const getSkillCollectionMap = (skills: { [id: number]: Skill}) => {\r\n  const skillLst = Object.values(skills);\r\n  return skillLst.reduce((prev, curr) => {\r\n    if (prev[curr.name]) {\r\n      prev[curr.name].collection.push(curr);\r\n    } else {\r\n      prev[curr.name] = { name: curr.name, collection: [curr] };\r\n    }\r\n    return prev;\r\n  }, {} as { [name: string]: SkillCollection });\r\n}\r\n\r\nexport const arrangeSkills = (\r\n  skills: { [id: number]: Skill },\r\n  lst: number[]\r\n) => {\r\n  const skillLst = Object.values(skills);\r\n  const allColMap = skillLst.reduce((prev, curr) => {\r\n    if (prev[curr.name]) {\r\n      prev[curr.name].collection.push(curr);\r\n    } else {\r\n      prev[curr.name] = { name: curr.name, collection: [curr] };\r\n    }\r\n    return prev;\r\n  }, {} as { [name: string]: SkillCollection });\r\n  lst.forEach((x) => {\r\n    allColMap[skills[x].name].selected = skills[x];\r\n  });\r\n\r\n  const includedColMap = Object.fromEntries(\r\n    Object.entries(allColMap).filter((x) => x[1].selected)\r\n  );\r\n  return [allColMap, includedColMap];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport EmpForm from \"src/components/forms/EmpForm\";\r\nimport { Employee } from \"src/kernel\";\r\nimport { getData } from \"src/selectors\";\r\nimport { saveData } from \"src/slices/data\";\r\nimport SkillAssignWidget from \"./SkillAssignWidget\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    height: \"fit-content\",\r\n    minHeight: 400,\r\n  },\r\n  empForm: {\r\n    padding: 20,\r\n  },\r\n  skills: {\r\n    height: 300,\r\n    padding: 20,\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\ninterface PageProps {\r\n  item: Employee;\r\n}\r\n\r\nconst EmpDetailDisp: React.FC<PageProps> = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { depts, emps } = useSelector(getData);\r\n\r\n  const deptLst = Object.values(depts);\r\n  const empLst = Object.values(emps);\r\n\r\n  const { item } = props;\r\n\r\n  const handleSubmit = (e: Employee) => {\r\n    dispatch(saveData(e));\r\n  };\r\n\r\n  const handleSkillSubmit = (lst: number[]) => {\r\n    handleSubmit({ ...item, skills: lst });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Paper elevation={3} className={classes.item}>\r\n          <div className={classes.empForm}>\r\n            <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n              Employee Details\r\n            </Typography>\r\n            <EmpForm\r\n              deptLst={deptLst}\r\n              empLst={empLst}\r\n              data={item}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper elevation={3} className={classes.item}>\r\n          <div className={classes.skills}>\r\n            <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n              Skills\r\n            </Typography>\r\n            <SkillAssignWidget\r\n              included={item.skills}\r\n              onSubmit={handleSkillSubmit}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EmpDetailDisp;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport EmpForm from \"src/components/forms/EmpForm\";\r\nimport { getData } from \"src/selectors\";\r\nimport { Employee } from \"src/kernel\";\r\n\r\ninterface Props {\r\n  data: Employee;\r\n  feedback?: any;\r\n  onSubmit: (data: Employee) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Wrapper: React.FC<Props> = (props) => {\r\n  const { depts, emps } = useSelector(getData);\r\n  const deptLst = Object.values(depts);\r\n  const empLst = Object.values(emps);\r\n\r\n  const { data, feedback, onSubmit, onCancel } = props;\r\n\r\n  return (\r\n    <EmpForm\r\n      data={data}\r\n      feedback={feedback}\r\n      deptLst={deptLst}\r\n      empLst={empLst}\r\n      onSubmit={onSubmit}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Data } from \"src/kernel\";\r\nimport { SyncState } from \"src/types\";\r\n\r\nexport const initialState: SyncState = {\r\n  syncing: false,\r\n};\r\n\r\nconst syncSlice = createSlice({\r\n  name: \"sync\",\r\n  initialState,\r\n  reducers: {\r\n    submitError: (state, { payload }: PayloadAction<string>) => {\r\n      state.syncing = false;\r\n      state.error = payload;\r\n    },\r\n    submitSuccess: (state, { payload }: PayloadAction<any>) => {\r\n      state.syncing = false;\r\n      state.feedback = payload;\r\n    },\r\n    createNew: (state, { payload }: PayloadAction<Data>) => {\r\n      state.syncing = true;\r\n      state.feedback = undefined;\r\n    },\r\n    modify: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      state.syncing = true;\r\n    },\r\n    erase: (state, { payload }: PayloadAction<Data | Data[]>) => {\r\n      state.syncing = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  submitSuccess,\r\n  submitError,\r\n  createNew,\r\n  modify,\r\n  erase,\r\n} = syncSlice.actions;\r\n\r\nexport default syncSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport BasePage from \"src/components/BasePage\";\r\nimport EmpMainList from \"src/components/EmpListWidget\";\r\nimport EmpDetailDisp from \"./EmpDetailDisp\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport EmpForm from \"./EmpFormWrapper\";\r\nimport { getData, getSync } from \"src/selectors\";\r\nimport { Employee } from \"src/kernel\";\r\nimport { selEmp, delData } from \"src/slices/data\";\r\nimport { createNew } from \"src/slices/sync\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"inherit\",\r\n    width: \"95%\",\r\n    margin: \"auto\",\r\n  },\r\n  empList: {\r\n    position: \"relative\",\r\n    minWidth: \"300px\",\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n  },\r\n  empDetail: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    overflowY: \"scroll\",\r\n    padding: 20,\r\n  },\r\n  empForm: {\r\n    width: \"700px\",\r\n  },\r\n}));\r\n\r\nconst EmpPage: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { emps, newEmp, selEmpId } = useSelector(getData);\r\n  const { feedback } = useSelector(getSync);\r\n\r\n  const empLst = Object.values(emps);\r\n\r\n  const [empFormOpen, setEmpFormOpen] = React.useState(!!feedback);\r\n  React.useEffect(() => {\r\n    setEmpFormOpen(!!feedback);\r\n  }, [feedback]);\r\n\r\n  const handleSelect = (e: Employee) => {\r\n    dispatch(selEmp(e.id));\r\n  };\r\n\r\n  const handleNewSubmit = (data: Employee) => {\r\n    dispatch(createNew(data));\r\n    setEmpFormOpen(false);\r\n  };\r\n\r\n  const handleDelete = (...e: Employee[]) => {\r\n    dispatch(delData(e));\r\n  }\r\n\r\n  return (\r\n    <BasePage>\r\n      <div className={classes.root}>\r\n        <div className={classes.empList}>\r\n          <EmpMainList\r\n            lst={empLst}\r\n            addButtonOnClick={() => setEmpFormOpen(true)}\r\n            onSelect={handleSelect}\r\n            onDelete={handleDelete}\r\n          />\r\n        </div>\r\n        <div className={classes.empDetail}>\r\n          {selEmpId ? <EmpDetailDisp item={emps[selEmpId]} /> : null}\r\n        </div>\r\n      </div>\r\n      <MyDialog\r\n        title=\"Add New Employee\"\r\n        open={empFormOpen}\r\n        onClose={() => setEmpFormOpen(false)}\r\n      >\r\n        <div className={classes.empForm}>\r\n          {newEmp ? (\r\n            <EmpForm\r\n              data={newEmp}\r\n              feedback={feedback}\r\n              onSubmit={handleNewSubmit}\r\n              onCancel={() => setEmpFormOpen(false)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </MyDialog>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default EmpPage;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport { Job } from \"../../kernel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  ctrlPanel: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n});\r\n\r\ninterface IJobCardProps {\r\n  className?: any;\r\n  item: Job;\r\n  onFocus?: () => void;\r\n  onEdit?: () => void;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst JobCard: React.FC<IJobCardProps> = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const { className, item, onFocus = () => {}, onEdit, onDelete } = props;\r\n\r\n  const { title, pplAmtRequired, empAssigned, assignableEmp } = item;\r\n  return (\r\n    <div className={className}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardActionArea\r\n          className={classes.info}\r\n          onClick={() => {\r\n            onFocus();\r\n            setOpen(!open);\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\" component=\"h2\">\r\n              {`Headcount Required: ${pplAmtRequired - empAssigned.length}`}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"caption\" component=\"h2\">\r\n              {`Headcount Available: ${\r\n                assignableEmp.filter((x) => empAssigned.indexOf(x) < 0).length\r\n              }`}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className={classes.ctrlPanel}>\r\n          {onDelete ? (\r\n            <Button size=\"small\" color=\"primary\" onClick={onDelete}>\r\n              Delete\r\n            </Button>\r\n          ) : null}\r\n          {onEdit ? (\r\n            <Button size=\"small\" color=\"primary\" onClick={onEdit}>\r\n              Edit\r\n            </Button>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        Hi!\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Job } from \"../../kernel\";\r\nimport JobCard from \"../cards/JobCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    padding: \"5px\",\r\n  },\r\n  bottomFiller: {\r\n    height: 100,\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\ninterface IJobListProps {\r\n  lst: Job[];\r\n  selectJob: (e: Job) => void;\r\n  deleteJob: (e: Job) => void;\r\n}\r\n\r\nconst MyList: React.FunctionComponent<IJobListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, selectJob, deleteJob } = props;\r\n\r\n  const genFocusHandler = (e: Job) => () => selectJob(e);\r\n  const genDeleteHandler = (e: Job) => () => deleteJob(e);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {lst.map((x, idx) => (\r\n        <JobCard\r\n          {...{\r\n            key: idx,\r\n            item: x,\r\n            className: classes.card,\r\n            onFocus: genFocusHandler(x),\r\n            onDelete: genDeleteHandler(x),\r\n          }}\r\n        />\r\n      ))}\r\n      <div className={classes.bottomFiller} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyList;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nimport { Job } from \"../kernel\";\r\nimport JobMainList from \"./lists/JobMainList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: \"100%\",\r\n    height: \"inherit\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"scroll\"\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    padding: \"5px\"\r\n  },\r\n  bottomFiller: {\r\n    height: 100\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100\r\n  }\r\n}));\r\n\r\ninterface IJobListProps {\r\n  lst: Job[];\r\n  onSelect: (e: Job) => void;\r\n  onDelete: (e: Job) => void;\r\n  addButtonOnClick: () => void;\r\n}\r\n\r\nconst JobList: React.FunctionComponent<IJobListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onSelect: selectJob, onDelete: deleteJob, addButtonOnClick } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.list}>\r\n        <JobMainList\r\n          lst={lst}\r\n          selectJob={selectJob}\r\n          deleteJob={deleteJob}\r\n        />\r\n      </div>\r\n      <Button className={classes.addButton} onClick={addButtonOnClick}>\r\n        <AddCircleIcon className={classes.addIcon} />\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import { Job } from \".\";\r\nimport { SettingsData } from \"./data\";\r\n\r\nfunction calcHeadcount(settings: SettingsData, j: Job): number {\r\n  let {\r\n    forecast,\r\n    cycle_time,\r\n    efficiency_percentage,\r\n    total_avail_hour,\r\n    attendance,\r\n    working_days_per_month\r\n  } = settings;\r\n  let { sectorPercentage } = j;\r\n\r\n  return (\r\n    (((forecast * sectorPercentage) / 100) * cycle_time) /\r\n    ((efficiency_percentage / 100) *\r\n      total_avail_hour *\r\n      attendance *\r\n      working_days_per_month)\r\n  );\r\n}\r\n\r\nexport { calcHeadcount };\r\n","import React from \"react\";\r\n\r\nimport Checklist, { Item } from \"../commons/Checklist\";\r\nimport { Employee } from \"../../kernel\";\r\n\r\ninterface FormProps {\r\n  lst: Employee[];\r\n  onSubmit: (lst: Employee[]) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { lst, onSubmit } = props;\r\n  const itemLst: Item<Employee>[] = lst.map(x => ({ name: x.lastName, value: x}));\r\n  return <Checklist lst={itemLst} onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Employee } from \"../../kernel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  info: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  profilePic: {\r\n    width: \"120px\",\r\n  },\r\n  ctrlPanel: {\r\n    display: \"flex\",\r\n    marginLeft: \"auto\", // make item on right side\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n});\r\n\r\ninterface EmpCardProps {\r\n  className?: any;\r\n  item: Employee;\r\n  onFocus?: () => void;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst EmpCard: React.FC<EmpCardProps> = (props) => {\r\n  const { className, item, onFocus = () => {}, onDelete } = props;\r\n  const classes = useStyles();\r\n  const { firstName, lastName, sesaId, department } = item;\r\n  return (\r\n    <div className={className}>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {firstName}, {lastName.toUpperCase()}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"caption\" component=\"h4\">\r\n            SESA ID: {sesaId}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.ctrlPanel}>\r\n          {onDelete ? (\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete}><DeleteIcon /></IconButton>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpCard;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Employee } from \"../../kernel\";\r\nimport EmpSmallCard from \"../cards/EmpSmallCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"100%\",\r\n    padding: \"5px\",\r\n  },\r\n  bottomFiller: {\r\n    height: 100,\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\ninterface IEmployeeListProps {\r\n  lst: Employee[];\r\n  onDelete?: (e: Employee) => void;\r\n}\r\n\r\nconst EmpList: React.FunctionComponent<IEmployeeListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onDelete } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {lst.map((x, idx) => (\r\n        <EmpSmallCard\r\n          {...{\r\n            key: idx,\r\n            item: x,\r\n            className: classes.card,\r\n            onDelete: () => onDelete && onDelete(x)\r\n          }}\r\n        />\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmpList;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Employee } from \"src/kernel\";\r\nimport EmpList from \"./lists/EmpAssignList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"inherit\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  list: {\r\n    height: \"90%\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  ctrlPanel: {\r\n    height: \"10%\",\r\n    marginBotton: \"auto\",\r\n  },\r\n}));\r\n\r\ninterface ListProps {\r\n  lst: Employee[];\r\n  onDelete: (e: Employee) => void;\r\n  addButtonOnClick?: () => void;\r\n  delButtonOnClick?: () => void;\r\n}\r\n\r\nconst MyList: React.FunctionComponent<ListProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onDelete, addButtonOnClick, delButtonOnClick } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.list}>\r\n        <EmpList lst={lst} onDelete={onDelete}/>\r\n      </div>\r\n      <div className={classes.ctrlPanel}>\r\n        {addButtonOnClick ? (\r\n          <Button onClick={addButtonOnClick}>Add</Button>\r\n        ) : null}\r\n        {delButtonOnClick ? (\r\n          <Button onClick={delButtonOnClick}>Delete</Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Employee, Job } from \"src/kernel\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport EmpSelForm from \"src/components/forms/EmpSelForm\";\r\nimport EmpAssignList from \"src/components/EmpAssignListWidget\";\r\n\r\nimport { getData } from \"src/selectors\";\r\n\r\ninterface Props {\r\n  job: Job;\r\n  onSubmit: (lst: number[]) => void;\r\n}\r\n\r\nconst Widget: React.FC<Props> = (props) => {\r\n  const { job, onSubmit } = props;\r\n  const included = job.empAssigned;\r\n  const available = job.assignableEmp;\r\n  const { emps } = useSelector(getData);\r\n\r\n  const [addLstOpen, setAddLstOpen] = React.useState(false);\r\n\r\n  const handleAddEmp = (lst: Employee[]) => {\r\n    const idlst = lst.map((x) => x.id ?? 0);\r\n    onSubmit([...new Set([...idlst, ...included])]);\r\n    setAddLstOpen(false);\r\n  };\r\n\r\n  const handleDelEmp = (...lst: Employee[]) => {\r\n    const idlst = lst.map((x) => x.id ?? 0);\r\n    onSubmit(included.filter((x) => idlst.indexOf(x) < 0));\r\n  };\r\n\r\n  const getIncludedEmps = () => {\r\n    return included.map((x) => emps[x]);\r\n  };\r\n\r\n  const getAvailableEmps = () => {\r\n    return available.map((x) => emps[x]);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EmpAssignList\r\n        lst={getIncludedEmps()}\r\n        onDelete={handleDelEmp}\r\n        addButtonOnClick={() => setAddLstOpen(true)}\r\n      />\r\n      <MyDialog\r\n        title=\"Assign Employee\"\r\n        open={addLstOpen}\r\n        onClose={() => setAddLstOpen(false)}\r\n      >\r\n        <EmpSelForm lst={getAvailableEmps()} onSubmit={handleAddEmp} />\r\n      </MyDialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Job } from \"src/kernel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"fit-content\"\r\n  },\r\n  rowInput: {\r\n    display: \"relative\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10\r\n  }\r\n}));\r\n\r\ntype FormData = Job;\r\ntype FormFeedback = any;\r\ninterface FormChoices {}\r\n\r\ninterface FormProps {\r\n  data: FormData; //watch\r\n  feedback?: FormFeedback;\r\n  choices: FormChoices;\r\n  onChange?: (data: FormData) => void;\r\n}\r\n\r\nconst Form: React.FunctionComponent<FormProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { data, feedback, choices, onChange } = props;\r\n\r\n  const [state, setState] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setState(data);\r\n  }, [data]);\r\n  const [fbState, setFbState] = React.useState(feedback);\r\n  React.useEffect(() => {\r\n    setFbState(feedback);\r\n  }, [feedback]);\r\n\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (value < 0) return;\r\n    \r\n    setFbState({...fbState, [name]: undefined});\r\n    if (onChange) {\r\n      onChange({ ...state, [name]: value});\r\n    } else {\r\n      data[name] = value;\r\n      setState({ ...state, [name]: value});\r\n    }\r\n  };\r\n\r\n  const numValueSetter = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n    let num = parseInt(value, 10);\r\n    value = isNaN(num) ? 0 : num;\r\n\r\n    \r\n    if (onChange) {\r\n      onChange({ ...state, [name]: value});\r\n    } else {\r\n      data[name] = value;\r\n      setState({ ...state, [name]: value});\r\n    }\r\n  };\r\n\r\n  const getFeedback = (name: string) => {\r\n    return fbState ? (fbState[name] ? fbState[name][0] : \"\") : \"\";\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            name=\"title\"\r\n            label=\"Name\"\r\n            value={state.title}\r\n            fullWidth\r\n            onChange={changeHandler}\r\n            error={getFeedback(\"title\") !== \"\"}\r\n            helperText={getFeedback(\"title\")}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            name=\"pplAmtRequired\"\r\n            label=\"Headcount Required\"\r\n            value={state.pplAmtRequired}\r\n            fullWidth\r\n            onChange={changeHandler}\r\n            onBlur={numValueSetter}\r\n            error={getFeedback(\"pplAmtRequired\") !== \"\"}\r\n            helperText={getFeedback(\"pplAmtRequired\")}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            name=\"salaryAmount\"\r\n            label=\"Salary\"\r\n            value={state.salaryAmount}\r\n            fullWidth\r\n            onChange={changeHandler}\r\n            onBlur={numValueSetter}\r\n            error={getFeedback(\"salaryAmount\") !== \"\"}\r\n            helperText={getFeedback(\"salary_amount\")}\r\n            variant=\"filled\"\r\n            type=\"number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"From\"\r\n            type=\"date\"\r\n            name=\"fromDate\"\r\n            value={state.fromDate}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            onChange={changeHandler}\r\n            error={getFeedback(\"fromDate\") !== \"\"}\r\n            helperText={getFeedback(\"fromDate\")}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            label=\"To\"\r\n            type=\"date\"\r\n            name=\"toDate\"\r\n            value={state.toDate}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            onChange={changeHandler}\r\n            error={getFeedback(\"toDate\") !== \"\"}\r\n            helperText={getFeedback(\"toDate\")}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport type { FormData, FormFeedback, FormChoices };\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport FormFields, { FormChoices } from \"./JobFormFields\";\r\nimport { Job } from \"../../kernel\";\r\n\r\ninterface FormProps {\r\n  data: Job;\r\n  feedback?: any;\r\n  onSubmit: (data: Job) => void;\r\n  onChange?: (data: Job) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { data, feedback, onSubmit, onCancel, onChange } = props;\r\n  const choices: FormChoices = {};\r\n  const newData = { ...data };\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit(newData);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <FormFields\r\n            choices={choices}\r\n            data={newData}\r\n            feedback={feedback}\r\n            onChange={onChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {onCancel ? <Button onClick={onCancel}>Cancel</Button> : null}\r\n            {!onChange ? <Button onClick={handleSubmit}>Submit</Button> : null}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { SettingsData } from \"src/kernel\";\r\n\r\nconst useStyles = makeStyles((themes) => ({\r\n  root: {\r\n    height: \"fit-content\",\r\n  },\r\n  rowInput: {\r\n    display: \"relative\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n}));\r\n\r\ntype FormData = any;\r\ntype FormFeedback = any;\r\ntype FormChoices = any;\r\n\r\ninterface ISettingsFormProps {\r\n  data: FormData; //watch\r\n  feedback?: FormFeedback;\r\n  choices: FormChoices;\r\n  onChange?: (data: FormData) => void;\r\n}\r\n\r\nconst SettingsForm: React.FunctionComponent<ISettingsFormProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { data, onChange } = props;\r\n\r\n  const [state, setState] = React.useState(data);\r\n\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = String(e.target.checked);\r\n    }\r\n    setState((state: any) => ({...state, [name]: value}));\r\n    data[name] = value\r\n    onChange && onChange(data);\r\n  };\r\n\r\n  const numValueSetter = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n    let num = parseInt(value, 10);\r\n    value = isNaN(num) ? 0 : num;\r\n    setState((state: any) => ({...state, [name]: value}));\r\n    data[name] = value;\r\n    onChange && onChange(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.rowInput}>\r\n        <TextField\r\n          required\r\n          name=\"total_avail_hour\"\r\n          label=\"Total Available Hour\"\r\n          value={state.total_avail_hour}\r\n          fullWidth\r\n          onChange={changeHandler}\r\n          onBlur={numValueSetter}\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className={classes.rowInput}>\r\n        <TextField\r\n          required\r\n          name=\"attendance\"\r\n          label=\"Attendance Rate\"\r\n          value={state.attendance}\r\n          fullWidth\r\n          onChange={changeHandler}\r\n          onBlur={numValueSetter}\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className={classes.rowInput}>\r\n        <TextField\r\n          required\r\n          name=\"cycle_time\"\r\n          label=\"Cycle Time\"\r\n          value={state.cycle_time}\r\n          fullWidth\r\n          onChange={changeHandler}\r\n          onBlur={numValueSetter}\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className={classes.rowInput}>\r\n        <TextField\r\n          required\r\n          name=\"efficiency_percentage\"\r\n          label=\"Efficiency\"\r\n          value={state.efficiency_percentage}\r\n          fullWidth\r\n          onChange={changeHandler}\r\n          onBlur={numValueSetter}\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n      <div className={classes.rowInput}>\r\n        <TextField\r\n          required\r\n          name=\"forecast\"\r\n          label=\"Forecast\"\r\n          value={state.forecast}\r\n          fullWidth\r\n          onChange={changeHandler}\r\n          onBlur={numValueSetter}\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Settings as ForecastSettings, defaultSettings } from \"src/kernel\";\r\nimport { SettingsState } from \"src/types\";\r\n\r\nexport const initialState: SettingsState = {\r\n  forecastSettings: defaultSettings\r\n};\r\n\r\nconst settingsSlice = createSlice({\r\n  name: \"settings\",\r\n  initialState,\r\n  reducers: {\r\n    submitSettings: (state, { payload }: PayloadAction<ForecastSettings>) => {\r\n      state.forecastSettings = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  submitSettings\r\n} = settingsSlice.actions;\r\n\r\nexport default settingsSlice.reducer;\r\n","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Job, Settings as ForecastSettings } from \"../kernel\";\r\nimport { calcHeadcount } from \"src/kernel/ForecastCalc\";\r\n\r\nimport EmpAssignWidget from \"./JobEmpAssignWidget\";\r\nimport SkillAssignWidget from \"./SkillAssignWidget\";\r\nimport JobForm from \"src/components/forms/JobForm\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport SettingsForm from \"src/components/forms/SettingsFormFields\";\r\n\r\nimport { getSettings } from \"src/selectors\";\r\nimport { saveItemProp, saveData } from \"src/slices/data\";\r\nimport { submitSettings } from \"src/slices/settings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  item: {\r\n    width: \"95%\",\r\n    margin: \"auto\",\r\n  },\r\n  jobForm: {\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    alignContent: \"center\",\r\n    margin: \"auto\",\r\n  },\r\n  forecast: {\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    alignContent: \"center\",\r\n    margin: \"auto\",\r\n  },\r\n  assignments: {\r\n    width: \"95%\",\r\n    margin: \"auto\",\r\n  },\r\n  emps: {\r\n    height: 300,\r\n  },\r\n  skills: {\r\n    height: 300,\r\n  },\r\n}));\r\n\r\ninterface DispProps {\r\n  item: Job;\r\n}\r\n\r\nconst JobDetailDisp: React.FC<DispProps> = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { forecastSettings: settings } = useSelector(getSettings);\r\n\r\n  const { item } = props;\r\n\r\n  const [settingsFormOpen, setSettingsFormOpen] = React.useState(false);\r\n  const [data, setData] = React.useState(item);\r\n  React.useEffect(() => {\r\n    setData(item);\r\n  }, [item]);\r\n\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const numValueSetter = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n    let num = parseInt(value, 10);\r\n    value = isNaN(num) ? 0 : num;\r\n    dispatch(\r\n      saveItemProp({\r\n        type: item._type,\r\n        id: item.id,\r\n        prop: name,\r\n        val: value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSettingsChange = (s: ForecastSettings) => {\r\n    dispatch(submitSettings(s));\r\n  };\r\n\r\n  const handleSubmit = (data: Job) => {\r\n    dispatch(saveData(data));\r\n  };\r\n\r\n  const handleEmpSubmit = (lst: number[]) => {\r\n    handleSubmit({ ...data, empAssigned: lst });\r\n  };\r\n\r\n  const handleSkillSubmit = (lst: number[]) => {\r\n    handleSubmit({ ...data, skillsRequired: lst });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={4} className={classes.root}>\r\n        <Grid item xs={12} sm={9}>\r\n          <Paper elevation={3} className={classes.item}>\r\n            <div className={classes.jobForm}>\r\n              <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n                Edit Job\r\n              </Typography>\r\n              <JobForm data={item} onSubmit={handleSubmit} />\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper elevation={3} className={classes.item}>\r\n            <div className={classes.forecast}>\r\n              <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n                Forecast\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Button onClick={() => setSettingsFormOpen(true)}>\r\n                    Settings\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    name=\"sectorPercentage\"\r\n                    label=\"% of Sector\"\r\n                    value={data.sectorPercentage}\r\n                    fullWidth\r\n                    onChange={changeHandler}\r\n                    onBlur={numValueSetter}\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  Forecasted Headcount: <br />\r\n                  {Math.ceil(calcHeadcount(settings, data))}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper elevation={3} className={classes.item}>\r\n            <div className={classes.assignments}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n                    Assignment\r\n                  </Typography>\r\n                  <div className={classes.emps}>\r\n                    <EmpAssignWidget job={data} onSubmit={handleEmpSubmit} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography component=\"h3\" variant=\"h5\" color=\"inherit\">\r\n                    Skill Required\r\n                  </Typography>\r\n                  <div className={classes.skills}>\r\n                    <SkillAssignWidget\r\n                      included={data.skillsRequired}\r\n                      onSubmit={handleSkillSubmit}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <MyDialog\r\n        title=\"Settings\"\r\n        open={settingsFormOpen}\r\n        onClose={() => setSettingsFormOpen(false)}\r\n      >\r\n        <div>\r\n          <SettingsForm\r\n            data={{ ...settings }}\r\n            choices={{}}\r\n            onChange={handleSettingsChange}\r\n          />\r\n        </div>\r\n      </MyDialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default JobDetailDisp;\r\n","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport BasePage from \"src/components/BasePage\";\r\nimport JobList from \"src/components/JobListWidget\";\r\nimport { Job } from \"../kernel\";\r\nimport JobDetailDisp from \"./JobDetailDisp\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport JobForm from \"src/components/forms/JobForm\";\r\nimport { getData } from \"src/selectors\";\r\nimport { selJob, delData } from \"src/slices/data\";\r\nimport { createNew } from \"src/slices/sync\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    paddingTop: \"20px\",\r\n  },\r\n  workspace: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"inherit\",\r\n    width: \"95%\",\r\n    margin: \"auto\",\r\n  },\r\n  jobList: {\r\n    position: \"relative\",\r\n    width: \"30%\",\r\n    minWidth: 250,\r\n    height: \"100%\",\r\n  },\r\n  jobDetail: {\r\n    position: \"relative\",\r\n    width: \"70%\",\r\n    height: \"100%\",\r\n    overflowY: \"scroll\",\r\n    paddingTop: 30,\r\n  },\r\n  addIcon: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  jobForm: {\r\n    width: \"70vw\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst Page: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { jobs, newJob, selJobId } = useSelector(getData);\r\n\r\n  const jobLst = Object.values(jobs);\r\n  const selected =\r\n    selJobId && !_.isEmpty(jobs) ? { ...jobs[selJobId] } : undefined;\r\n\r\n  const [jobFormOpen, setJobFormOpen] = React.useState(false);\r\n\r\n  const handleSelect = (data: Job) => {\r\n    dispatch(selJob(data.id));\r\n  };\r\n\r\n  const handleNewSubmit = (data: Job) => {\r\n    dispatch(createNew(data));\r\n    setJobFormOpen(false);\r\n  };\r\n\r\n  const handleDelete = (...datas: Job[]) => {\r\n    dispatch(delData(datas));\r\n  };\r\n\r\n  return (\r\n    <BasePage>\r\n      <div className={classes.workspace}>\r\n        <div className={classes.jobList}>\r\n          <JobList\r\n            {...{\r\n              lst: jobLst,\r\n              onSelect: handleSelect,\r\n              onDelete: handleDelete,\r\n              addButtonOnClick: () => setJobFormOpen(true),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.jobDetail}>\r\n          {selected ? <JobDetailDisp item={selected} /> : null}\r\n        </div>\r\n      </div>\r\n      <MyDialog\r\n        title=\"New Job\"\r\n        open={jobFormOpen}\r\n        onClose={() => setJobFormOpen(false)}\r\n      >\r\n        <div className={classes.jobForm}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Job Details\r\n          </Typography>\r\n          {newJob ? (\r\n            <JobForm\r\n              data={newJob}\r\n              onSubmit={handleNewSubmit}\r\n              onCancel={() => setJobFormOpen(false)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </MyDialog>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Department } from \"src/kernel\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    maxWidth: \"100%\",\r\n    height: 150,\r\n  },\r\n  buttons: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\"\r\n  }\r\n});\r\n\r\ninterface CardProps {\r\n  item: Department;\r\n  onDelete?: () => void;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst MyCard: React.FC<CardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { item, onDelete } = props;\r\n\r\n  const [data, setData] = React.useState(item);\r\n  React.useEffect(() => {\r\n    setData(item);\r\n  }, [item]);\r\n\r\n  return (\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {data.name}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.buttons}>\r\n          {onDelete ? (\r\n            <Button size=\"small\" onClick={onDelete}>\r\n              Delete\r\n            </Button>\r\n          ) : null}\r\n        </CardActions>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Department } from \"src/kernel\";\r\nimport DeptCard from \"./cards/DeptCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\ninterface GridProps {\r\n  lst: Department[];\r\n  onSubmit: (s: Department) => void;\r\n  onDelete: (s: Department) => void;\r\n  addButtonOnClick: () => void;\r\n}\r\n\r\nconst MyGrid: React.FC<GridProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onSubmit, onDelete, addButtonOnClick } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        {lst.map((x, idx) => {\r\n          const xCpy = { ...x };\r\n          return (\r\n            <Grid className={classes.item} item xs={2} key={idx}>\r\n              <DeptCard item={xCpy} onDelete={() => onDelete(xCpy)} />\r\n            </Grid>\r\n          );\r\n        })}\r\n        <Grid item xs={2}>\r\n          <Button onClick={addButtonOnClick}>Add</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyGrid;\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport { Department } from \"src/kernel\";\r\nimport { FormChoices } from \"./types\";\r\n\r\ninterface FormProps {\r\n  data: Department;\r\n  feedback?: any;\r\n  choices: FormChoices;\r\n  onChange?: (data: Department) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { data, feedback, choices, onChange } = props;\r\n\r\n  const [state, setState] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setState(data);\r\n  }, [data]);\r\n  const [fbState, setFbState] = React.useState(feedback);\r\n  React.useEffect(() => {\r\n    setFbState(feedback);\r\n  }, [feedback]);\r\n\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = String(e.target.checked);\r\n    }\r\n\r\n    if (name === \"department\" || name === \"reportTo\") {\r\n      value = choices[name][value].value;\r\n    }\r\n    setFbState({...fbState, [name]: undefined});\r\n    if (onChange) {\r\n      onChange({ ...state, [name]: value });\r\n    } else {\r\n      data[name] = value;\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const getFeedback = (name: string) => {\r\n    return fbState ? (fbState[name] ? fbState[name][0] : \"\") : \"\";\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TextField\r\n        required\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        fullWidth\r\n        autoComplete=\"name\"\r\n        value={data.name}\r\n        error={getFeedback(\"name\") !== \"\"}\r\n        helperText={getFeedback(\"name\")}\r\n        variant=\"standard\"\r\n        InputLabelProps={{\r\n          shrink: !!data.name,\r\n        }}\r\n        onChange={changeHandler}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport { Department } from \"src/kernel\";\r\nimport DeptFormFields from \"./DeptFormFields\";\r\nimport { FormChoices } from \"./types\";\r\n\r\ninterface FormProps {\r\n  data: Department;\r\n  feedback?: any;\r\n  onSubmit: (data: Department) => void;\r\n  onChange?: (data: Department) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { data, feedback, onSubmit, onChange, onCancel } = props;\r\n  const choices: FormChoices = {};\r\n  const newData = { ...data };\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit(newData);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <DeptFormFields\r\n            data={newData}\r\n            choices={choices}\r\n            feedback={feedback}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {onCancel ? <Button onClick={onCancel}>Cancel</Button> : null}\r\n            {!onChange ? <Button onClick={handleSubmit}>Submit</Button> : null}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport BasePage from \"src/components/BasePage\";\r\nimport DeptGridWidget from \"src/components/DeptGridWidget\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport DeptForm from \"src/components/forms/DeptForm\";\r\n\r\nimport { getData, getSync } from \"src/selectors\";\r\nimport { saveData, delData } from \"src/slices/data\";\r\nimport { createNew } from \"src/slices/sync\";\r\n\r\nimport { Department } from \"src/kernel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  deptGrid: {\r\n    padding: 40,\r\n  },\r\n  deptForm: {\r\n\r\n  }\r\n}));\r\n\r\nconst Page: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { depts, newDept } = useSelector(getData);\r\n  const { feedback } = useSelector(getSync);\r\n  const deptLst = Object.values(depts);\r\n\r\n  const handleSubmit = (...ds: Department[]) => {\r\n    dispatch(saveData(ds));\r\n  };\r\n\r\n  const handleDelete = (...ds: Department[]) => {\r\n    dispatch(delData(ds));\r\n  }\r\n\r\n  const handleSubmitNew = (d: Department) => {\r\n    dispatch(createNew(d));\r\n    setDeptFormOpen(false);\r\n  }\r\n\r\n  const [deptFormOpen, setDeptFormOpen] = React.useState(false);\r\n  React.useEffect(() => {\r\n    setDeptFormOpen(!!feedback);\r\n  }, [feedback]);\r\n  \r\n  return (\r\n    <BasePage>\r\n      <div className={classes.deptGrid}>\r\n        <DeptGridWidget\r\n          lst={deptLst}\r\n          onSubmit={handleSubmit}\r\n          onDelete={handleDelete}\r\n          addButtonOnClick={() => setDeptFormOpen(true)}\r\n        />\r\n      </div>\r\n      <MyDialog\r\n        title=\"Add New Department\"\r\n        open={deptFormOpen}\r\n        onClose={() => setDeptFormOpen(false)}\r\n      >\r\n        <div className={classes.deptForm}>\r\n          {newDept ? (\r\n            <DeptForm data={newDept} onSubmit={handleSubmitNew}/>\r\n          ) : null}\r\n        </div>\r\n      </MyDialog>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import * as React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Skill } from \"src/kernel\";\r\n\r\ntype FormData = Skill;\r\ntype FormFeedback = any;\r\ninterface FormChoices {}\r\n\r\ninterface FormProps {\r\n  data: FormData; //watch\r\n  feedback?: FormFeedback;\r\n  choices: FormChoices;\r\n  onChange?: (data: FormData) => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { data, feedback, choices, onChange } = props;\r\n\r\n  const [state, setState] = React.useState(data);\r\n  React.useEffect(() => {\r\n    setState(data);\r\n  }, [data]);\r\n  const [fbState, setFbState] = React.useState(feedback);\r\n  React.useEffect(() => {\r\n    setFbState(feedback);\r\n  }, [feedback]);\r\n\r\n  const [brandNew, setBrandNew] = React.useState(data.name === \"\");\r\n  const changeHandler = (e: React.ChangeEvent<any>) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = String(e.target.checked);\r\n    }\r\n    setFbState({...fbState, [name]: undefined});\r\n    if (onChange) {\r\n      onChange({ ...state, [name]: value });\r\n    } else {\r\n      data[name] = value;\r\n      setState({ ...state, [name]: value });\r\n    }\r\n  };\r\n\r\n  const getFeedback = (name: string) => {\r\n    return fbState ? (fbState[name] ? fbState[name][0] : \"\") : \"\";\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        {brandNew ? (\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              fullWidth\r\n              autoComplete=\"name\"\r\n              value={state.sesaId}\r\n              error={getFeedback(\"name\") !== \"\"}\r\n              helperText={getFeedback(\"name\")}\r\n              variant=\"standard\"\r\n              InputLabelProps={{\r\n                shrink: !!state.name,\r\n              }}\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              name=\"level\"\r\n              label=\"Level\"\r\n              fullWidth\r\n              autoComplete=\"level\"\r\n              value={state.level}\r\n              error={getFeedback(\"level\") !== \"\"}\r\n              helperText={getFeedback(\"level\")}\r\n              variant=\"standard\"\r\n              InputLabelProps={{\r\n                shrink: !!state.level,\r\n              }}\r\n              type=\"number\"\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport type { FormData, FormFeedback, FormChoices };\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Skill } from \"src/kernel\";\r\nimport FormFields, { FormChoices } from \"./SkillFormFields\";\r\n\r\ninterface FormProps {\r\n  data: Skill;\r\n  feedback?: any;\r\n  onSubmit: (data: Skill) => void;\r\n  onChange?: (data: Skill) => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const { data, feedback, onSubmit, onCancel, onChange } = props;\r\n  const choices: FormChoices = {};\r\n  const newData = { ...data };\r\n\r\n  const handleSubmit = () => {\r\n    onSubmit(newData);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <FormFields\r\n            data={newData}\r\n            choices={choices}\r\n            feedback={feedback}\r\n            onChange={onChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {onCancel ? <Button onClick={onCancel}>Cancel</Button> : null}\r\n            {!onChange ? <Button onClick={handleSubmit}>Submit</Button> : null}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { SkillCollection } from \"../types\";\r\nimport { Skill } from \"src/kernel\";\r\nimport SkillSmallCard from \"./SkillSmallCard\";\r\nimport { MyDialog } from \"../commons\";\r\nimport SkillForm from \"../forms/SkillForm\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  content: {\r\n    height: \"90%\",\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    height: \"15%\",\r\n    width: \"100%\",\r\n  },\r\n  list: {\r\n    height: \"85%\",\r\n    width: \"100%\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  buttons: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n  },\r\n  skillForm: {}\r\n}));\r\n\r\ninterface CardProps {\r\n  item: SkillCollection;\r\n  onDelete: (s: Skill) => void;\r\n  onSubmitNew: (s: Skill) => void;\r\n}\r\n\r\nconst MyCard: React.FC<CardProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { item, onDelete, onSubmitNew } = props;\r\n  item.collection.sort((x, y) => x.level - y.level);\r\n\r\n  const handleDelete = (idx: number) => {\r\n    let d = item.collection.splice(idx, 1)[0];\r\n    onDelete(d);\r\n  }\r\n\r\n  const handleSubmitNew = (s: Skill) => {\r\n    if (!item.collection.some(x => x.level === s.level)) {\r\n      onSubmitNew(s);\r\n      setSkillFormOpen(false);\r\n    }\r\n  }\r\n\r\n  const [skillFormOpen, setSkillFormOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n        <Typography className={classes.title} variant=\"h6\" component=\"h2\">\r\n          {item.name}\r\n        </Typography>\r\n        <List dense className={classes.list}>\r\n          {item.collection.map((x, idx) => {\r\n            return (\r\n              <ListItem key={idx}>\r\n                <SkillSmallCard item={x} onDelete={() => handleDelete(idx)}/>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </CardContent>\r\n      <CardActions className={classes.buttons}>\r\n        <Button onClick={() => setSkillFormOpen(true)}>Add</Button>\r\n      </CardActions>\r\n      <MyDialog\r\n        title=\"Add New Skill\"\r\n        open={skillFormOpen}\r\n        onClose={() => setSkillFormOpen(false)}\r\n      >\r\n        <div className={classes.skillForm}>\r\n          <SkillForm data={item.collection[0]} onSubmit={handleSubmitNew}/>\r\n        </div>\r\n      </MyDialog>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import * as React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Skill } from \"src/kernel\";\r\nimport SkillCard from \"./cards/SkillCard\";\r\nimport { SkillCollection } from \"./types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  item: {\r\n    padding: 10,\r\n    width: 300,\r\n    height: 330,\r\n  },\r\n}));\r\n\r\ninterface GridProps {\r\n  lst: SkillCollection[];\r\n  onSubmitNew: (s: Skill) => void;\r\n  onDelete: (s: Skill) => void;\r\n  addButtonOnClick: () => void;\r\n}\r\n\r\nconst MyGrid: React.FC<GridProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { lst, onSubmitNew, onDelete, addButtonOnClick } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        {lst.map((x, idx) => {\r\n          return (\r\n            <div key={idx} className={classes.item}>\r\n              <SkillCard item={x} onDelete={onDelete} onSubmitNew={onSubmitNew}/>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className={classes.item}>\r\n          <Button onClick={addButtonOnClick}>Add</Button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyGrid;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport BasePage from \"src/components/BasePage\";\r\nimport SkillGridWidget from \"src/components/SkillGridWidget\";\r\nimport { MyDialog } from \"src/components/commons\";\r\nimport SkillForm from \"src/components/forms/SkillForm\";\r\n\r\nimport { getData } from \"src/selectors\";\r\nimport { saveData, delData } from \"src/slices/data\";\r\nimport { createNew } from \"src/slices/sync\";\r\n\r\nimport { Skill } from \"src/kernel\";\r\nimport { getSkillCollectionMap } from \"./utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  SkillGrid: {\r\n    padding: 40,\r\n  },\r\n  SkillForm: {},\r\n}));\r\n\r\nconst Page: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { skills, newSkill } = useSelector(getData);\r\n\r\n  const skillColMap = getSkillCollectionMap(skills);\r\n  const skillLst = Object.values(skillColMap);\r\n\r\n  const handleDelete = (...ds: Skill[]) => {\r\n    dispatch(delData(ds));\r\n  };\r\n\r\n  const handleSubmit = (d: Skill) => {\r\n    dispatch(saveData(d));\r\n  };\r\n\r\n  const handleSubmitNew = (d: Skill) => {\r\n    dispatch(createNew(d));\r\n  };\r\n\r\n  const handleSubmitBrandNew = (d: Skill) => {\r\n    d.level = 1;\r\n    handleSubmitNew(d);\r\n    setSkillFormOpen(false);\r\n  };\r\n\r\n  const [skillFormOpen, setSkillFormOpen] = React.useState(false);\r\n  return (\r\n    <BasePage>\r\n      <div className={classes.SkillGrid}>\r\n        <SkillGridWidget\r\n          lst={skillLst}\r\n          onSubmitNew={handleSubmitNew}\r\n          onDelete={handleDelete}\r\n          addButtonOnClick={() => setSkillFormOpen(true)}\r\n        />\r\n      </div>\r\n      <MyDialog\r\n        title=\"Add New Skill\"\r\n        open={skillFormOpen}\r\n        onClose={() => setSkillFormOpen(false)}\r\n      >\r\n        <div className={classes.SkillForm}>\r\n          {newSkill ? (\r\n            <SkillForm data={newSkill} onSubmit={handleSubmitBrandNew} />\r\n          ) : null}\r\n        </div>\r\n      </MyDialog>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { reload } from \"src/slices/data\";\n\nimport LandingPage from \"./EmpPage\";\nimport JobPage from \"./JobPage\";\nimport DeptPage from \"./DeptPage\";\nimport SkillPage from \"./SkillPage\";\n\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(reload());\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/emps\" />\n      </Route>\n      <Route exact path=\"/emps\" component={() => <LandingPage />} />\n      <Route exact path=\"/jobs\" component={() => <JobPage />} />\n      <Route exact path=\"/depts\" component={() => <DeptPage />} />\n      <Route exact path=\"/skills\" component={() => <SkillPage />} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import { all, put, takeLatest, call, select } from \"redux-saga/effects\";\r\nimport {\r\n  Data,\r\n  DataType,\r\n  Department,\r\n  Employee,\r\n  Job,\r\n  Kernel,\r\n  Result,\r\n  Skill,\r\n} from \"src/kernel\";\r\nimport { getData } from \"src/selectors\";\r\n\r\nimport {\r\n  reload,\r\n  reloadError,\r\n  reloadSuccess,\r\n  calculate,\r\n  calculateSuccess,\r\n  saveData,\r\n  _saveData,\r\n  _saveNewData,\r\n  delData,\r\n  _delData,\r\n  saveItemProp,\r\n} from \"src/slices/data\";\r\nimport {\r\n  createNew,\r\n  modify,\r\n  erase,\r\n  submitError,\r\n  submitSuccess,\r\n} from \"src/slices/sync\";\r\nimport {\r\n  CreateNewAction,\r\n  SaveDataAction,\r\n  DeleteDataAction,\r\n  EraseAction,\r\n  ModifyAction,\r\n} from \"src/types\";\r\n\r\nconst k = new Kernel();\r\n\r\nfunction* fetchDatas() {\r\n  let depts, emps, skills, jobs, newDept, newSkill, newEmp, newJob;\r\n  try {\r\n    yield call(k.refresh);\r\n    depts = k.ds.getLst();\r\n    newDept = k.ds.getNew();\r\n    skills = k.ss.getLst();\r\n    newSkill = k.ss.getNew();\r\n    emps = k.es.getLst();\r\n    newEmp = k.es.getNew();\r\n    jobs = k.js.getLst();\r\n    newJob = k.js.getNew();\r\n    yield put(\r\n      reloadSuccess({\r\n        depts,\r\n        emps,\r\n        jobs,\r\n        skills,\r\n        newDept,\r\n        newSkill,\r\n        newEmp,\r\n        newJob,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(reloadError(error.message));\r\n  }\r\n  yield put(calculate());\r\n}\r\n\r\nfunction* calculateDatas() {\r\n  const { skills, emps, jobs } = yield select(getData);\r\n  let changes = [];\r\n\r\n  let empJobMap = Object.values(jobs as Job[]).reduce((prev, curr) => {\r\n    curr.empAssigned.forEach((x) => {\r\n      if (!prev[x]) prev[x] = [];\r\n      prev[x].push(curr.id);\r\n    });\r\n    return prev;\r\n  }, {} as { [empId: number]: Array<number> });\r\n\r\n  const getAssignableEmps = (j: Job) => {\r\n    const included = j.empAssigned;\r\n    let ans = Object.values(emps) as Employee[];\r\n    ans = ans\r\n      .filter((x) => included.indexOf(x.id) < 0)\r\n      .filter((x) => !empJobMap[x.id]);\r\n    for (let s of j.skillsRequired) {\r\n      let ss = skills[s];\r\n      ans = ans.filter((x) =>\r\n        x.skills.some((y: number) => {\r\n          let sy = skills[y];\r\n          return sy.name === ss.name && sy.level >= ss.level;\r\n        })\r\n      );\r\n    }\r\n    return ans.map((x) => x.id);\r\n  };\r\n  changes.push(\r\n    ...Object.values(jobs as Job[]).map((x) => ({\r\n      type: DataType.Job,\r\n      id: x.id,\r\n      prop: \"assignableEmp\",\r\n      val: getAssignableEmps(x),\r\n    }))\r\n  );\r\n  changes.push(\r\n    ...Object.entries(empJobMap).map((x) => ({\r\n      type: DataType.Employee,\r\n      id: parseInt(x[0], 10),\r\n      prop: \"jobAssigned\",\r\n      val: x[1],\r\n    }))\r\n  );\r\n\r\n  yield put(saveItemProp(changes));\r\n  yield put(calculateSuccess());\r\n}\r\n\r\nfunction* postItemThenSave({ payload }: CreateNewAction) {\r\n  try {\r\n    const feedback: Result = yield call(async () => await k.saveNew(payload));\r\n    if (feedback.success) {\r\n      yield put(_saveNewData(feedback.data));\r\n      yield put(submitSuccess(undefined));\r\n    } else {\r\n      yield put(submitSuccess(feedback.data));\r\n    }\r\n  } catch (error) {\r\n    yield put(submitError(error.message));\r\n  }\r\n  yield put(calculate());\r\n}\r\n\r\nfunction* putItem({ payload }: ModifyAction) {\r\n  if (!(payload instanceof Array)) {\r\n    payload = [payload];\r\n  }\r\n  try {\r\n    for (let p of payload) {\r\n      yield call(async () => await k.save(p));\r\n    }\r\n    yield put(submitSuccess(undefined));\r\n  } catch (error) {\r\n    yield put(submitError(error.message));\r\n  }\r\n}\r\n\r\nfunction* deleteItem({ payload }: EraseAction) {\r\n  if (!Array.isArray(payload)) {\r\n    payload = [payload];\r\n  }\r\n  try {\r\n    for (let p of payload) {\r\n      yield call(async () => await k.del(p));\r\n    }\r\n    yield put(submitSuccess(undefined));\r\n  } catch (error) {\r\n    yield put(submitError(error.message));\r\n  }\r\n}\r\n\r\nfunction delDataCascade(\r\n  payload: Data,\r\n  emps: { [id: number]: Employee },\r\n  jobs: { [id: number]: Job }\r\n): any {\r\n  let mods: Data[] = [],\r\n    dels: Data[] = [];\r\n  function getEmpsWithDept(dept: Department) {\r\n    return Object.values(emps).filter(\r\n      (x) => (x as Employee).department === dept.id\r\n    );\r\n  }\r\n  function getJobsWithEmp(emp: Employee) {\r\n    return Object.values(jobs).filter(\r\n      (x) => (x as Job).empAssigned.indexOf(emp.id) >= 0\r\n    );\r\n  }\r\n  function getEmpsWithSkill(skill: Skill) {\r\n    return Object.values(emps).filter(\r\n      (x) => (x as Employee).skills.indexOf(skill.id) >= 0\r\n    );\r\n  }\r\n  function getJobsWithSkill(skill: Skill) {\r\n    return Object.values(jobs).filter(\r\n      (x) => (x as Job).skillsRequired.indexOf(skill.id) >= 0\r\n    );\r\n  }\r\n\r\n  function cascadeDel(p: Data) {\r\n    dels.push(p);\r\n    let empLst, jobLst, newEmp, newJob;\r\n    switch (p._type) {\r\n      case DataType.Department:\r\n        empLst = getEmpsWithDept(p as Department) as Employee[];\r\n        for (let e of empLst) {\r\n          cascadeDel(e);\r\n        }\r\n        break;\r\n      case DataType.Employee:\r\n        jobLst = getJobsWithEmp(p as Employee) as Job[];\r\n        for (let j of jobLst) {\r\n          newJob = {\r\n            ...j,\r\n            empAssigned: j.empAssigned.filter((x) => x !== p.id),\r\n          };\r\n          mods.push(newJob);\r\n        }\r\n        break;\r\n      case DataType.Skill:\r\n        empLst = getEmpsWithSkill(p as Skill) as Employee[];\r\n        jobLst = getJobsWithSkill(p as Skill) as Job[];\r\n        for (let j of jobLst) {\r\n          newJob = {\r\n            ...j,\r\n            skillsRequired: j.skillsRequired.filter((x) => x !== p.id),\r\n          };\r\n          mods.push(newJob);\r\n        }\r\n        for (let e of empLst) {\r\n          newEmp = { ...e, skills: e.skills.filter((x) => x !== p.id) };\r\n          mods.push(newEmp);\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  cascadeDel(payload);\r\n  mods.reverse();\r\n  dels.reverse();\r\n  return [mods, dels];\r\n}\r\n\r\nfunction* delDataCascadeThenCalculate({ payload }: DeleteDataAction): any {\r\n  const { emps, jobs } = yield select(getData);\r\n  if (!(payload instanceof Array)) {\r\n    payload = [payload];\r\n  }\r\n  let mods, dels, finalMods = [], finalDels = [];\r\n  for (let p of payload) {\r\n    [mods, dels] = delDataCascade(p, emps, jobs);\r\n    finalMods.push(...mods);\r\n    finalDels.push(...dels);\r\n  }\r\n  yield put(_saveData(finalMods));\r\n  yield put(_delData(finalDels));\r\n  yield put(modify(finalMods));\r\n  yield put(erase(finalDels));\r\n  yield put(calculate());\r\n}\r\n\r\nfunction* saveDataCascadeThenCalculate({ payload }: SaveDataAction) {\r\n  yield put(modify(payload));\r\n  yield put(_saveData(payload));\r\n  yield put(calculate());\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    takeLatest(reload.type, fetchDatas),\r\n    takeLatest(calculate.type, calculateDatas),\r\n    takeLatest(saveData.type, saveDataCascadeThenCalculate),\r\n    takeLatest(delData.type, delDataCascadeThenCalculate),\r\n    takeLatest(createNew.type, postItemThenSave),\r\n    takeLatest(modify.type, putItem),\r\n    takeLatest(erase.type, deleteItem),\r\n  ]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { combineReducers, Reducer } from \"redux\";\r\n\r\nimport dataReducer from \"src/slices/data\";\r\nimport syncReducer from \"src/slices/sync\";\r\nimport settingsReducer from \"src/slices/settings\";\r\nimport { RootState } from \"src/types\";\r\n\r\nconst rootReducer: Reducer<RootState> = combineReducers<RootState>({\r\n  dataState: dataReducer,\r\n  syncState: syncReducer,\r\n  settingsState: settingsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\n\nimport App from \"./containers/App\";\nimport history from \"./utils/history\";\nimport rootSaga from 'src/sagas'\nimport rootReducer from 'src/slices'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleware, ...getDefaultMiddleware({ thunk: false })],\n  devTools: true//process.env.NODE_ENV !== 'production',\n})\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { DepartmentData, EmployeeData, JobData, SkillData } from \"./data\";\r\nimport axios from \"axios\";\r\n/*\r\nimport FakeServer from \"./FakeServer\";\r\nconst axios = new FakeServer();\r\n*/\r\ntype Result = any;\r\n\r\nconst empUrl = \"http://127.0.0.1:8000/api/emp/\";\r\nconst deptUrl = \"http://127.0.0.1:8000/api/dept/\";\r\nconst skillUrl = \"http://127.0.0.1:8000/api/skill/\";\r\nconst jobUrl = \"http://127.0.0.1:8000/api/job/\";\r\n\r\nclass Fetcher {\r\n  static getEmps = async (): Promise<Result> => {\r\n    return await axios.get(empUrl);\r\n  };\r\n\r\n  static getDepts = async (): Promise<Result> => {\r\n    return await axios.get(deptUrl);\r\n  };\r\n\r\n  static getSkills = async (): Promise<Result> => {\r\n    return await axios.get(skillUrl);\r\n  };\r\n\r\n  static getJobs = async (): Promise<Result> => {\r\n    return await axios.get(jobUrl);\r\n  };\r\n\r\n  static postEmp = async (data: EmployeeData): Promise<Result> => {\r\n    let fd = new FormData();\r\n    console.log(Object.entries(data));\r\n    Object.entries(data).forEach((x) => {\r\n      x[1] && fd.append(x[0], x[1]);\r\n    });\r\n    fd.delete(\"skills\");\r\n    console.log([...fd.entries()]);\r\n    let ans;\r\n    try {\r\n      ans = await axios.post(empUrl, fd);\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw error;\r\n    }\r\n    console.log(ans);\r\n    return ans;\r\n  };\r\n\r\n  static postDept = async (data: DepartmentData): Promise<Result> => {\r\n    return await axios.post(deptUrl, data);\r\n  };\r\n\r\n  static postSkill = async (data: SkillData): Promise<Result> => {\r\n    return await axios.post(skillUrl, data);\r\n  };\r\n\r\n  static postJob = async (data: JobData): Promise<Result> => {\r\n    return await axios.post(jobUrl, data);\r\n  };\r\n\r\n  static putEmp = async (data: EmployeeData): Promise<Result> => {\r\n    return await axios.put(`${empUrl}${data.id}/`, data);\r\n  };\r\n\r\n  static putDept = async (data: DepartmentData): Promise<Result> => {\r\n    return await axios.put(`${deptUrl}${data.id}/`, data);\r\n  };\r\n\r\n  static putSkill = async (data: SkillData): Promise<Result> => {\r\n    return await axios.put(`${skillUrl}${data.id}/`, data);\r\n  };\r\n\r\n  static putJob = async (data: JobData): Promise<Result> => {\r\n    return await axios.put(`${jobUrl}${data.id}/`, data);\r\n  };\r\n\r\n  static deleteEmp = async (data: EmployeeData): Promise<Result> => {\r\n    return await axios.delete(`${empUrl}${data.id}/`);\r\n  };\r\n\r\n  static deleteDept = async (data: DepartmentData): Promise<Result> => {\r\n    console.log(data);\r\n    return await axios.delete(`${deptUrl}${data.id}/`);\r\n  };\r\n\r\n  static deleteSkill = async (data: SkillData): Promise<Result> => {\r\n    return await axios.delete(`${skillUrl}${data.id}/`);\r\n  };\r\n\r\n  static deleteJob = async (data: JobData): Promise<Result> => {\r\n    return await axios.delete(`${jobUrl}${data.id}/`);\r\n  };\r\n}\r\n\r\nexport default Fetcher;\r\n","export * from \"./Kernel\";\r\nexport * from \"./data\";\r\nexport * from \"./Employee\";\r\nexport * from \"./Department\";\r\nexport * from \"./Skill\";\r\nexport * from \"./Job\";\r\nexport * from \"./Settings\";\r\nexport * from \"./Store\";\r\n","import { DepartmentData } from \"./data\";\r\nimport Fetcher from \"./Fetcher\";\r\nimport store, { DataType, Item } from \"./Store\";\r\n\r\ninterface Department extends Item {\r\n  id: number;\r\n  name: string;\r\n  [k: string]: any;\r\n}\r\n\r\nfunction dataToObj(data: DepartmentData): Department {\r\n  return {\r\n    _type: DataType.Department,\r\n    id: data.id ?? -1,\r\n    name: data.name,\r\n  };\r\n}\r\n\r\nfunction objToData(obj: Department): DepartmentData {\r\n  return {\r\n    id: obj.id === -1 ? undefined : obj.id,\r\n    name: obj.name,\r\n  };\r\n}\r\n\r\nconst get = async () => {\r\n  let res = await Fetcher.getDepts();\r\n  return res.data.map(dataToObj);\r\n};\r\nconst post = async (t: Department) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.postDept(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 201, data: dataToObj(res.data) };\r\n};\r\nconst put = async (t: Department) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.putDept(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 200, data: dataToObj(res.data) };\r\n};\r\nconst del = async (t: Department) => {\r\n  await Fetcher.deleteDept(objToData(t));\r\n};\r\n\r\nconst generator = (): Department => ({\r\n  _type: DataType.Department,\r\n  name: \"\",\r\n  id: -1,\r\n});\r\n\r\nconst DepartmentStore = store<Department>(get, post, put, del, generator);\r\n\r\nexport type { Department };\r\nexport default DepartmentStore;\r\n","import { SkillData } from \"./data\";\r\nimport Fetcher from \"./Fetcher\";\r\nimport store, { Item, DataType } from \"./Store\";\r\n\r\ninterface Skill extends Item {\r\n  id: number;\r\n  name: string;\r\n  level: number;\r\n  [k: string]: any;\r\n}\r\n\r\nfunction dataToObj(data: SkillData): Skill {\r\n  return {\r\n    _type: DataType.Skill,\r\n    id: data.id ?? -1,\r\n    name: data.name,\r\n    level: data.level,\r\n  };\r\n}\r\n\r\nfunction objToData(obj: Skill): SkillData {\r\n  return {\r\n    id: obj.id === -1 ? undefined : obj.id,\r\n    name: obj.name,\r\n    level: obj.level,\r\n  };\r\n}\r\n\r\nconst get = async () => {\r\n  let res = await Fetcher.getSkills();\r\n  return res.data.map(dataToObj);\r\n};\r\nconst post = async (t: Skill) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.postSkill(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 201, data: dataToObj(res.data) };\r\n};\r\nconst put = async (t: Skill) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.putSkill(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 200, data: dataToObj(res.data) };\r\n};\r\nconst del = async (t: Skill) => {\r\n  await Fetcher.deleteSkill(objToData(t));\r\n};\r\n\r\nconst generator = () => ({\r\n  _type: DataType.Skill,\r\n  id: -1,\r\n  name: \"\",\r\n  level: 0,\r\n});\r\n\r\nconst SkillStore = store<Skill>(get, post, put, del, generator);\r\n\r\nexport type { Skill };\r\nexport default SkillStore;\r\n","import { EmployeeData } from \"./data\";\r\nimport Fetcher from \"./Fetcher\";\r\nimport store, { Item, DataType } from \"./Store\";\r\n\r\ninterface Employee extends Item {\r\n  id: number;\r\n  available: boolean;\r\n  birthDate: string;\r\n  firstName: string;\r\n  gender: string;\r\n  hireDate: string;\r\n  lastName: string;\r\n  department?: number;\r\n  profilePic?: string | File;\r\n  reportTo?: number;\r\n  sesaId: string;\r\n  skills: number[];\r\n  jobAssigned: number[];\r\n  [k: string]: any;\r\n}\r\n\r\nfunction dataToObj(\r\n  data: EmployeeData,\r\n): Employee {\r\n  return {\r\n    _type: DataType.Employee,\r\n    id: data.id ?? -1,\r\n    available: data.available,\r\n    birthDate: data.birth_date,\r\n    firstName: data.first_name,\r\n    gender: data.gender,\r\n    hireDate: data.hire_date,\r\n    lastName: data.last_name,\r\n    department: data.department,\r\n    profilePic: data.profile_pic,\r\n    sesaId: data.sesa_id,\r\n    skills: data.skills,\r\n    reportTo: data.report_to,\r\n    jobAssigned: [],\r\n  };\r\n}\r\n\r\nfunction objToData(obj: Employee): EmployeeData {\r\n  return {\r\n    id: obj.id === -1 ? undefined : obj.id,\r\n    available: obj.available,\r\n    birth_date: obj.birthDate,\r\n    first_name: obj.firstName,\r\n    gender: obj.gender,\r\n    hire_date: obj.hireDate,\r\n    last_name: obj.lastName,\r\n    department: obj.department,\r\n    profile_pic: obj.profilePic,\r\n    sesa_id: obj.sesaId,\r\n    skills: [...obj.skills],\r\n    report_to: obj.reportTo,\r\n  };\r\n}\r\n\r\nconst generator = (): Employee => ({\r\n  _type: DataType.Employee,\r\n  id: -1,\r\n  available: false,\r\n  birthDate: \"\",\r\n  firstName: \"\",\r\n  gender: \"\",\r\n  hireDate: \"\",\r\n  lastName: \"\",\r\n  profilePic: \"\",\r\n  sesaId: \"\",\r\n  skills: [],\r\n  jobAssigned: [],\r\n});\r\n\r\nconst get = async () => {\r\n  let res = await Fetcher.getEmps();\r\n  return res.data.map((x: EmployeeData) => dataToObj(x));\r\n};\r\nconst post = async (t: Employee) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.postEmp(objToData(t));\r\n  } catch (error) {\r\n    console.log(error);\r\n    res = error.response;\r\n  }\r\n  console.log(res);\r\n  return { success: res.status === 201, data: dataToObj(res.data) };\r\n};\r\nconst put = async (t: Employee) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.putEmp(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 200, data: dataToObj(res.data) };\r\n}\r\nconst del = async (t: Employee) => {\r\n  await Fetcher.deleteEmp(objToData(t));\r\n}\r\n\r\nconst EmployeeStore = store<Employee>(get, post, put, del, generator);\r\n\r\nexport type { Employee };\r\nexport default EmployeeStore;\r\n","import { JobData } from \"./data\";\r\nimport Fetcher from \"./Fetcher\";\r\nimport store, { Item, DataType } from \"./Store\";\r\n\r\ninterface Job extends Item {\r\n  id: number;\r\n  title: string;\r\n  pplAmtRequired: number;\r\n  skillsRequired: number[];\r\n  salaryAmount: number;\r\n  empAssigned: number[];\r\n  fromDate: string;\r\n  toDate: string;\r\n  sectorPercentage: number;\r\n  assignableEmp: number[];\r\n  [k: string]: any;\r\n}\r\n\r\nfunction dataToObj(\r\n  data: JobData,\r\n): Job {\r\n  return {\r\n    _type: DataType.Job,\r\n    id: data.id ?? -1,\r\n    title: data.title,\r\n    pplAmtRequired: data.ppl_amt_required,\r\n    skillsRequired: [...data.skills_required],\r\n    salaryAmount: data.salary_amount,\r\n    empAssigned: [...data.emp_assigned],\r\n    fromDate: data.from_date,\r\n    toDate: data.to_date,\r\n    sectorPercentage: 0,\r\n    assignableEmp: [],\r\n  };\r\n}\r\n\r\nfunction objToData(obj: Job): JobData {\r\n  return {\r\n    id: obj.id === -1 ? undefined : obj.id,\r\n    title: obj.title,\r\n    ppl_amt_required: obj.pplAmtRequired,\r\n    skills_required: [...obj.skillsRequired],\r\n    salary_amount: obj.salaryAmount,\r\n    emp_assigned: [...obj.empAssigned],\r\n    from_date: obj.fromDate,\r\n    to_date: obj.toDate,\r\n  };\r\n}\r\n\r\nconst generator = (): Job => ({\r\n  _type: DataType.Job,\r\n  title: \"\",\r\n  id: -1,\r\n  pplAmtRequired: 0,\r\n  skillsRequired: [],\r\n  salaryAmount: 0,\r\n  empAssigned: [],\r\n  fromDate: \"\",\r\n  toDate: \"\",\r\n  sectorPercentage: 0,\r\n  assignableEmp: [],\r\n});\r\n\r\nconst get = async () => {\r\n  let res = await Fetcher.getJobs();\r\n  return res.data.map(dataToObj);\r\n};\r\n\r\nconst post = async (t: Job) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.postJob(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  console.log(res);\r\n  return { success: res.status === 201, data: dataToObj(res.data) };\r\n};\r\n\r\nconst put = async (t: Job) => {\r\n  let res;\r\n  try {\r\n    res = await Fetcher.putJob(objToData(t));\r\n  } catch (error) {\r\n    res = error.response;\r\n  }\r\n  return { success: res.status === 200, data: dataToObj(res.data) };\r\n}\r\n\r\nconst del = async (t: Job) => {\r\n  await Fetcher.deleteJob(objToData(t));\r\n}\r\n\r\nconst JobStore = store<Job>(get, post, put, del, generator);\r\n\r\nexport type { Job };\r\nexport default JobStore;\r\n"],"sourceRoot":""}